Nonterminals useless in grammar

   vp_spec


Terminals unused in grammar

   BRANCHTARGETS_DIRECTIVE
   BYTE_DIRECTIVE
   CALLPROTOTYPE_DIRECTIVE
   CALLTARGETS_DIRECTIVE
   MAXNNREG_DIRECTIVE
   REQNTID_DIRECTIVE
   SECTION_DIRECTIVE
   STRUCT_DIRECTIVE
   UNION_DIRECTIVE
   PERIOD


Rules useless in grammar

  300 vp_spec: WMMA_DIRECTIVE LAYOUT CONFIGURATION
  301        | WMMA_DIRECTIVE LAYOUT LAYOUT CONFIGURATION


Rules useless in parser due to conflicts

   32 function_decl_header: WEAK_DIRECTIVE FUNC_DIRECTIVE


State 77 conflicts: 56 reduce/reduce
State 324 conflicts: 1 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input directive_statement
    3      | input function_defn
    4      | input function_decl

    5 $@1: %empty

    6 function_defn: function_decl $@1 statement_block

    7 $@2: %empty

    8 $@3: %empty

    9 function_defn: function_decl $@2 block_spec_list $@3 statement_block

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | MAXNCTAPERSM_DIRECTIVE INT_OPERAND

   13 block_spec_list: block_spec
   14                | block_spec_list block_spec

   15 $@4: %empty

   16 $@5: %empty

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param

   18 $@6: %empty

   19 function_decl: function_decl_header $@6 function_ident_param
   20              | function_decl_header

   21 $@7: %empty

   22 $@8: %empty

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | IDENTIFIER

   25 function_decl_header: ENTRY_DIRECTIVE
   26                     | VISIBLE_DIRECTIVE ENTRY_DIRECTIVE
   27                     | WEAK_DIRECTIVE ENTRY_DIRECTIVE
   28                     | FUNC_DIRECTIVE
   29                     | VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   30                     | WEAK_DIRECTIVE FUNC_DIRECTIVE
   31                     | EXTERN_DIRECTIVE FUNC_DIRECTIVE
   32                     | WEAK_DIRECTIVE FUNC_DIRECTIVE

   33 param_list: %empty
   34           | param_entry

   35 $@9: %empty

   36 param_list: param_list COMMA $@9 param_entry

   37 $@10: %empty

   38 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec

   39 $@11: %empty

   40 param_entry: REG_DIRECTIVE $@11 variable_spec identifier_spec

   41 ptr_spec: %empty
   42         | PTR_DIRECTIVE ptr_space_spec ptr_align_spec
   43         | PTR_DIRECTIVE ptr_align_spec

   44 ptr_space_spec: GLOBAL_DIRECTIVE
   45               | LOCAL_DIRECTIVE
   46               | SHARED_DIRECTIVE
   47               | CONST_DIRECTIVE

   48 ptr_align_spec: ALIGN_DIRECTIVE INT_OPERAND

   49 statement_block: LEFT_BRACE statement_list RIGHT_BRACE

   50 statement_list: directive_statement
   51               | instruction_statement
   52               | statement_list directive_statement
   53               | statement_list instruction_statement

   54 $@12: %empty

   55 statement_list: statement_list $@12 statement_block

   56 $@13: %empty

   57 statement_list: $@13 statement_block

   58 directive_statement: variable_declaration SEMI_COLON
   59                    | VERSION_DIRECTIVE DOUBLE_OPERAND
   60                    | VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   61                    | ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   62                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   63                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   64                    | TARGET_DIRECTIVE IDENTIFIER
   65                    | FILE_DIRECTIVE INT_OPERAND STRING
   66                    | FILE_DIRECTIVE INT_OPERAND STRING COMMA INT_OPERAND COMMA INT_OPERAND
   67                    | LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   68                    | PRAGMA_DIRECTIVE STRING SEMI_COLON
   69                    | function_decl SEMI_COLON

   70 variable_declaration: variable_spec identifier_list
   71                     | variable_spec identifier_spec EQUALS initializer_list
   72                     | variable_spec identifier_spec EQUALS literal_operand
   73                     | CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND

   74 variable_spec: var_spec_list

   75 identifier_list: identifier_spec
   76                | identifier_list COMMA identifier_spec

   77 identifier_spec: IDENTIFIER
   78                | IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   79                | IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   80                | IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

   81 var_spec_list: var_spec
   82              | var_spec_list var_spec

   83 var_spec: space_spec
   84         | type_spec
   85         | align_spec
   86         | VISIBLE_DIRECTIVE
   87         | EXTERN_DIRECTIVE
   88         | WEAK_DIRECTIVE

   89 align_spec: ALIGN_DIRECTIVE INT_OPERAND

   90 space_spec: REG_DIRECTIVE
   91           | SREG_DIRECTIVE
   92           | addressable_spec

   93 addressable_spec: CONST_DIRECTIVE
   94                 | GLOBAL_DIRECTIVE
   95                 | LOCAL_DIRECTIVE
   96                 | PARAM_DIRECTIVE
   97                 | SHARED_DIRECTIVE
   98                 | SSTARR_DIRECTIVE
   99                 | SURF_DIRECTIVE
  100                 | TEX_DIRECTIVE

  101 type_spec: scalar_type
  102          | vector_spec scalar_type

  103 vector_spec: V2_TYPE
  104            | V3_TYPE
  105            | V4_TYPE

  106 scalar_type: S8_TYPE
  107            | S16_TYPE
  108            | S32_TYPE
  109            | S64_TYPE
  110            | U8_TYPE
  111            | U16_TYPE
  112            | U32_TYPE
  113            | U64_TYPE
  114            | F16_TYPE
  115            | F32_TYPE
  116            | F64_TYPE
  117            | FF64_TYPE
  118            | B8_TYPE
  119            | B16_TYPE
  120            | B32_TYPE
  121            | B64_TYPE
  122            | BB64_TYPE
  123            | BB128_TYPE
  124            | PRED_TYPE
  125            | TEXREF_TYPE
  126            | SAMPLERREF_TYPE
  127            | SURFREF_TYPE

  128 initializer_list: LEFT_BRACE literal_list RIGHT_BRACE
  129                 | LEFT_BRACE initializer_list RIGHT_BRACE

  130 literal_list: literal_operand
  131             | literal_list COMMA literal_operand

  132 instruction_statement: instruction SEMI_COLON
  133                      | IDENTIFIER COLON
  134                      | pred_spec instruction SEMI_COLON

  135 $@14: %empty

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  137            | opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  138            | opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  139            | opcode_spec operand_list
  140            | opcode_spec

  141 $@15: %empty

  142 opcode_spec: OPCODE $@15 option_list
  143            | OPCODE

  144 pred_spec: PRED IDENTIFIER
  145          | PRED EXCLAMATION IDENTIFIER
  146          | PRED IDENTIFIER LT_OPTION
  147          | PRED IDENTIFIER EQ_OPTION
  148          | PRED IDENTIFIER LE_OPTION
  149          | PRED IDENTIFIER NE_OPTION
  150          | PRED IDENTIFIER GE_OPTION
  151          | PRED IDENTIFIER EQU_OPTION
  152          | PRED IDENTIFIER GTU_OPTION
  153          | PRED IDENTIFIER NEU_OPTION
  154          | PRED IDENTIFIER CF_OPTION
  155          | PRED IDENTIFIER SF_OPTION
  156          | PRED IDENTIFIER NSF_OPTION

  157 option_list: option
  158            | option option_list

  159 option: type_spec
  160       | compare_spec
  161       | addressable_spec
  162       | rounding_mode
  163       | wmma_spec
  164       | prmt_spec
  165       | SYNC_OPTION
  166       | ARRIVE_OPTION
  167       | RED_OPTION
  168       | UNI_OPTION
  169       | WIDE_OPTION
  170       | ANY_OPTION
  171       | ALL_OPTION
  172       | BALLOT_OPTION
  173       | GLOBAL_OPTION
  174       | CTA_OPTION
  175       | SYS_OPTION
  176       | GEOM_MODIFIER_1D
  177       | GEOM_MODIFIER_2D
  178       | GEOM_MODIFIER_3D
  179       | SAT_OPTION
  180       | FTZ_OPTION
  181       | NEG_OPTION
  182       | APPROX_OPTION
  183       | FULL_OPTION
  184       | EXIT_OPTION
  185       | ABS_OPTION
  186       | atomic_operation_spec
  187       | TO_OPTION
  188       | HALF_OPTION
  189       | EXTP_OPTION
  190       | CA_OPTION
  191       | CG_OPTION
  192       | CS_OPTION
  193       | LU_OPTION
  194       | CV_OPTION
  195       | WB_OPTION
  196       | WT_OPTION
  197       | NC_OPTION
  198       | UP_OPTION
  199       | DOWN_OPTION
  200       | BFLY_OPTION
  201       | IDX_OPTION

  202 atomic_operation_spec: ATOMIC_AND
  203                      | ATOMIC_POPC
  204                      | ATOMIC_OR
  205                      | ATOMIC_XOR
  206                      | ATOMIC_CAS
  207                      | ATOMIC_EXCH
  208                      | ATOMIC_ADD
  209                      | ATOMIC_INC
  210                      | ATOMIC_DEC
  211                      | ATOMIC_MIN
  212                      | ATOMIC_MAX

  213 rounding_mode: floating_point_rounding_mode
  214              | integer_rounding_mode

  215 floating_point_rounding_mode: RN_OPTION
  216                             | RZ_OPTION
  217                             | RM_OPTION
  218                             | RP_OPTION

  219 integer_rounding_mode: RNI_OPTION
  220                      | RZI_OPTION
  221                      | RMI_OPTION
  222                      | RPI_OPTION

  223 compare_spec: EQ_OPTION
  224             | NE_OPTION
  225             | LT_OPTION
  226             | LE_OPTION
  227             | GT_OPTION
  228             | GE_OPTION
  229             | LO_OPTION
  230             | LS_OPTION
  231             | HI_OPTION
  232             | HS_OPTION
  233             | EQU_OPTION
  234             | NEU_OPTION
  235             | LTU_OPTION
  236             | LEU_OPTION
  237             | GTU_OPTION
  238             | GEU_OPTION
  239             | NUM_OPTION
  240             | NAN_OPTION

  241 prmt_spec: PRMT_F4E_MODE
  242          | PRMT_B4E_MODE
  243          | PRMT_RC8_MODE
  244          | PRMT_RC16_MODE
  245          | PRMT_ECL_MODE
  246          | PRMT_ECR_MODE

  247 wmma_spec: WMMA_DIRECTIVE LAYOUT CONFIGURATION
  248          | WMMA_DIRECTIVE LAYOUT LAYOUT CONFIGURATION

  249 operand_list: operand
  250             | operand COMMA operand_list

  251 operand: IDENTIFIER
  252        | EXCLAMATION IDENTIFIER
  253        | MINUS IDENTIFIER
  254        | memory_operand
  255        | literal_operand
  256        | builtin_operand
  257        | vector_operand
  258        | MINUS vector_operand
  259        | tex_operand
  260        | IDENTIFIER PLUS INT_OPERAND
  261        | IDENTIFIER LO_OPTION
  262        | MINUS IDENTIFIER LO_OPTION
  263        | IDENTIFIER HI_OPTION
  264        | MINUS IDENTIFIER HI_OPTION
  265        | IDENTIFIER PIPE IDENTIFIER
  266        | IDENTIFIER PIPE IDENTIFIER LO_OPTION
  267        | IDENTIFIER PIPE IDENTIFIER HI_OPTION
  268        | IDENTIFIER BACKSLASH IDENTIFIER
  269        | IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  270        | IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION

  271 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  272               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  273               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  275               | LEFT_BRACE IDENTIFIER RIGHT_BRACE

  276 $@16: %empty

  277 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET

  278 builtin_operand: SPECIAL_REGISTER DIMENSION_MODIFIER
  279                | SPECIAL_REGISTER

  280 memory_operand: LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  281               | IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  282               | IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  283               | IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  284               | MINUS memory_operand

  285 twin_operand: IDENTIFIER PLUS IDENTIFIER
  286             | IDENTIFIER PLUS IDENTIFIER LO_OPTION
  287             | IDENTIFIER PLUS IDENTIFIER HI_OPTION
  288             | IDENTIFIER PLUS EQUALS IDENTIFIER
  289             | IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION
  290             | IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION
  291             | IDENTIFIER PLUS EQUALS INT_OPERAND

  292 literal_operand: INT_OPERAND
  293                | FLOAT_OPERAND
  294                | DOUBLE_OPERAND

  295 address_expression: IDENTIFIER
  296                   | IDENTIFIER LO_OPTION
  297                   | IDENTIFIER HI_OPTION
  298                   | IDENTIFIER PLUS INT_OPERAND
  299                   | INT_OPERAND


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 65 66 68
OPCODE (259) 142 143
WMMA_DIRECTIVE (260) 247 248
LAYOUT (261) 247 248
CONFIGURATION (262) 247 248
ALIGN_DIRECTIVE (263) 48 89
BRANCHTARGETS_DIRECTIVE (264)
BYTE_DIRECTIVE (265)
CALLPROTOTYPE_DIRECTIVE (266)
CALLTARGETS_DIRECTIVE (267)
CONST_DIRECTIVE (268) 47 93
CONSTPTR_DIRECTIVE (269) 73
PTR_DIRECTIVE (270) 42 43
ENTRY_DIRECTIVE (271) 25 26 27
EXTERN_DIRECTIVE (272) 31 87
FILE_DIRECTIVE (273) 65 66
FUNC_DIRECTIVE (274) 28 29 30 31 32
GLOBAL_DIRECTIVE (275) 44 94
LOCAL_DIRECTIVE (276) 45 95
LOC_DIRECTIVE (277) 67
MAXNCTAPERSM_DIRECTIVE (278) 12
MAXNNREG_DIRECTIVE (279)
MAXNTID_DIRECTIVE (280) 10
MINNCTAPERSM_DIRECTIVE (281) 11
PARAM_DIRECTIVE (282) 38 96
PRAGMA_DIRECTIVE (283) 68
REG_DIRECTIVE (284) 40 90
REQNTID_DIRECTIVE (285)
SECTION_DIRECTIVE (286)
SHARED_DIRECTIVE (287) 46 97
SREG_DIRECTIVE (288) 91
SSTARR_DIRECTIVE (289) 98
STRUCT_DIRECTIVE (290)
SURF_DIRECTIVE (291) 99
TARGET_DIRECTIVE (292) 62 63 64
TEX_DIRECTIVE (293) 100
UNION_DIRECTIVE (294)
VERSION_DIRECTIVE (295) 59 60
ADDRESS_SIZE_DIRECTIVE (296) 61
VISIBLE_DIRECTIVE (297) 26 29 86
WEAK_DIRECTIVE (298) 27 30 32 88
IDENTIFIER (299) 23 24 62 63 64 73 77 78 79 80 133 144 145 146 147
    148 149 150 151 152 153 154 155 156 251 252 253 260 261 262 263
    264 265 266 267 268 269 270 271 272 273 274 275 277 281 282 283
    285 286 287 288 289 290 291 295 296 297 298
INT_OPERAND (300) 10 11 12 48 61 65 66 67 73 78 80 89 260 291 292 298
    299
FLOAT_OPERAND (301) 293
DOUBLE_OPERAND (302) 59 60 294
S8_TYPE (303) 106
S16_TYPE (304) 107
S32_TYPE (305) 108
S64_TYPE (306) 109
U8_TYPE (307) 110
U16_TYPE (308) 111
U32_TYPE (309) 112
U64_TYPE (310) 113
F16_TYPE (311) 114
F32_TYPE (312) 115
F64_TYPE (313) 116
FF64_TYPE (314) 117
B8_TYPE (315) 118
B16_TYPE (316) 119
B32_TYPE (317) 120
B64_TYPE (318) 121
BB64_TYPE (319) 122
BB128_TYPE (320) 123
PRED_TYPE (321) 124
TEXREF_TYPE (322) 125
SAMPLERREF_TYPE (323) 126
SURFREF_TYPE (324) 127
V2_TYPE (325) 103
V3_TYPE (326) 104
V4_TYPE (327) 105
COMMA (328) 10 36 62 63 66 73 76 131 136 137 138 250 271 272 273 274
    277
PRED (329) 144 145 146 147 148 149 150 151 152 153 154 155 156
HALF_OPTION (330) 188
EXTP_OPTION (331) 189
EQ_OPTION (332) 147 223
NE_OPTION (333) 149 224
LT_OPTION (334) 146 225
LE_OPTION (335) 148 226
GT_OPTION (336) 227
GE_OPTION (337) 150 228
LO_OPTION (338) 229 261 262 266 269 286 289 296
LS_OPTION (339) 230
HI_OPTION (340) 231 263 264 267 270 287 290 297
HS_OPTION (341) 232
EQU_OPTION (342) 151 233
NEU_OPTION (343) 153 234
LTU_OPTION (344) 235
LEU_OPTION (345) 236
GTU_OPTION (346) 152 237
GEU_OPTION (347) 238
NUM_OPTION (348) 239
NAN_OPTION (349) 240
CF_OPTION (350) 154
SF_OPTION (351) 155
NSF_OPTION (352) 156
LEFT_SQUARE_BRACKET (353) 79 80 277 280 281 282 283
RIGHT_SQUARE_BRACKET (354) 79 80 277 280 281 282 283
WIDE_OPTION (355) 169
SPECIAL_REGISTER (356) 278 279
MINUS (357) 253 258 262 264 284
PLUS (358) 60 260 285 286 287 288 289 290 291 298
COLON (359) 133
SEMI_COLON (360) 58 68 69 132 134
EXCLAMATION (361) 145 252
PIPE (362) 265 266 267
RIGHT_BRACE (363) 49 128 129 271 272 273 274 275
LEFT_BRACE (364) 49 128 129 271 272 273 274 275
EQUALS (365) 71 72 288 289 290 291
PERIOD (366)
BACKSLASH (367) 268 269 270
DIMENSION_MODIFIER (368) 278
RN_OPTION (369) 215
RZ_OPTION (370) 216
RM_OPTION (371) 217
RP_OPTION (372) 218
RNI_OPTION (373) 219
RZI_OPTION (374) 220
RMI_OPTION (375) 221
RPI_OPTION (376) 222
UNI_OPTION (377) 168
GEOM_MODIFIER_1D (378) 176
GEOM_MODIFIER_2D (379) 177
GEOM_MODIFIER_3D (380) 178
SAT_OPTION (381) 179
FTZ_OPTION (382) 180
NEG_OPTION (383) 181
SYNC_OPTION (384) 165
RED_OPTION (385) 167
ARRIVE_OPTION (386) 166
ATOMIC_POPC (387) 203
ATOMIC_AND (388) 202
ATOMIC_OR (389) 204
ATOMIC_XOR (390) 205
ATOMIC_CAS (391) 206
ATOMIC_EXCH (392) 207
ATOMIC_ADD (393) 208
ATOMIC_INC (394) 209
ATOMIC_DEC (395) 210
ATOMIC_MIN (396) 211
ATOMIC_MAX (397) 212
LEFT_ANGLE_BRACKET (398) 78
RIGHT_ANGLE_BRACKET (399) 78
LEFT_PAREN (400) 17 23 136 137 138
RIGHT_PAREN (401) 17 23 136 137 138
APPROX_OPTION (402) 182
FULL_OPTION (403) 183
ANY_OPTION (404) 170
ALL_OPTION (405) 171
BALLOT_OPTION (406) 172
GLOBAL_OPTION (407) 173
CTA_OPTION (408) 174
SYS_OPTION (409) 175
EXIT_OPTION (410) 184
ABS_OPTION (411) 185
TO_OPTION (412) 187
CA_OPTION (413) 190
CG_OPTION (414) 191
CS_OPTION (415) 192
LU_OPTION (416) 193
CV_OPTION (417) 194
WB_OPTION (418) 195
WT_OPTION (419) 196
NC_OPTION (420) 197
UP_OPTION (421) 198
DOWN_OPTION (422) 199
BFLY_OPTION (423) 200
IDX_OPTION (424) 201
PRMT_F4E_MODE (425) 241
PRMT_B4E_MODE (426) 242
PRMT_RC8_MODE (427) 243
PRMT_RC16_MODE (428) 244
PRMT_ECL_MODE (429) 245
PRMT_ECR_MODE (430) 246


Nonterminals, with rules where they appear

$accept (176)
    on left: 0
input (177)
    on left: 1 2 3 4, on right: 0 2 3 4
function_defn (178)
    on left: 6 9, on right: 3
$@1 (179)
    on left: 5, on right: 6
$@2 (180)
    on left: 7, on right: 9
$@3 (181)
    on left: 8, on right: 9
block_spec (182)
    on left: 10 11 12, on right: 13 14
block_spec_list (183)
    on left: 13 14, on right: 9 14
function_decl (184)
    on left: 17 19 20, on right: 4 6 9 69
$@4 (185)
    on left: 15, on right: 17
$@5 (186)
    on left: 16, on right: 17
$@6 (187)
    on left: 18, on right: 19
function_ident_param (188)
    on left: 23 24, on right: 17 19
$@7 (189)
    on left: 21, on right: 23
$@8 (190)
    on left: 22, on right: 23
function_decl_header (191)
    on left: 25 26 27 28 29 30 31 32, on right: 17 19 20
param_list (192)
    on left: 33 34 36, on right: 23 36
$@9 (193)
    on left: 35, on right: 36
param_entry (194)
    on left: 38 40, on right: 17 34 36
$@10 (195)
    on left: 37, on right: 38
$@11 (196)
    on left: 39, on right: 40
ptr_spec (197)
    on left: 41 42 43, on right: 38
ptr_space_spec (198)
    on left: 44 45 46 47, on right: 42
ptr_align_spec (199)
    on left: 48, on right: 42 43
statement_block (200)
    on left: 49, on right: 6 9 55 57
statement_list (201)
    on left: 50 51 52 53 55 57, on right: 49 52 53 55
$@12 (202)
    on left: 54, on right: 55
$@13 (203)
    on left: 56, on right: 57
directive_statement (204)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69, on right: 2 50 52
variable_declaration (205)
    on left: 70 71 72 73, on right: 58
variable_spec (206)
    on left: 74, on right: 38 40 70 71 72
identifier_list (207)
    on left: 75 76, on right: 70 76
identifier_spec (208)
    on left: 77 78 79 80, on right: 38 40 71 72 75 76
var_spec_list (209)
    on left: 81 82, on right: 74 82
var_spec (210)
    on left: 83 84 85 86 87 88, on right: 81 82
align_spec (211)
    on left: 89, on right: 85
space_spec (212)
    on left: 90 91 92, on right: 83
addressable_spec (213)
    on left: 93 94 95 96 97 98 99 100, on right: 92 161
type_spec (214)
    on left: 101 102, on right: 84 159
vector_spec (215)
    on left: 103 104 105, on right: 102
scalar_type (216)
    on left: 106 107 108 109 110 111 112 113 114 115 116 117 118 119
    120 121 122 123 124 125 126 127, on right: 101 102
initializer_list (217)
    on left: 128 129, on right: 71 129
literal_list (218)
    on left: 130 131, on right: 128 131
instruction_statement (219)
    on left: 132 133 134, on right: 51 53
instruction (220)
    on left: 136 137 138 139 140, on right: 132 134
$@14 (221)
    on left: 135, on right: 136
opcode_spec (222)
    on left: 142 143, on right: 136 137 138 139 140
$@15 (223)
    on left: 141, on right: 142
pred_spec (224)
    on left: 144 145 146 147 148 149 150 151 152 153 154 155 156, on right:
    134
option_list (225)
    on left: 157 158, on right: 142 158
option (226)
    on left: 159 160 161 162 163 164 165 166 167 168 169 170 171 172
    173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 199 200 201, on right:
    157 158
atomic_operation_spec (227)
    on left: 202 203 204 205 206 207 208 209 210 211 212, on right:
    186
rounding_mode (228)
    on left: 213 214, on right: 162
floating_point_rounding_mode (229)
    on left: 215 216 217 218, on right: 213
integer_rounding_mode (230)
    on left: 219 220 221 222, on right: 214
compare_spec (231)
    on left: 223 224 225 226 227 228 229 230 231 232 233 234 235 236
    237 238 239 240, on right: 160
prmt_spec (232)
    on left: 241 242 243 244 245 246, on right: 164
wmma_spec (233)
    on left: 247 248, on right: 163
operand_list (234)
    on left: 249 250, on right: 136 137 139 250
operand (235)
    on left: 251 252 253 254 255 256 257 258 259 260 261 262 263 264
    265 266 267 268 269 270, on right: 136 137 138 249 250
vector_operand (236)
    on left: 271 272 273 274 275, on right: 257 258 277
tex_operand (237)
    on left: 277, on right: 259
$@16 (238)
    on left: 276, on right: 277
builtin_operand (239)
    on left: 278 279, on right: 256
memory_operand (240)
    on left: 280 281 282 283 284, on right: 254 284
twin_operand (241)
    on left: 285 286 287 288 289 290 291, on right: 283
literal_operand (242)
    on left: 292 293 294, on right: 72 130 131 255 282
address_expression (243)
    on left: 295 296 297 298 299, on right: 280 281


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . directive_statement
    3      | input . function_defn
    4      | input . function_decl

    $end                    shift, and go to state 2
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SSTARR_DIRECTIVE        shift, and go to state 18
    SURF_DIRECTIVE          shift, and go to state 19
    TARGET_DIRECTIVE        shift, and go to state 20
    TEX_DIRECTIVE           shift, and go to state 21
    VERSION_DIRECTIVE       shift, and go to state 22
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 23
    VISIBLE_DIRECTIVE       shift, and go to state 24
    WEAK_DIRECTIVE          shift, and go to state 25
    S8_TYPE                 shift, and go to state 26
    S16_TYPE                shift, and go to state 27
    S32_TYPE                shift, and go to state 28
    S64_TYPE                shift, and go to state 29
    U8_TYPE                 shift, and go to state 30
    U16_TYPE                shift, and go to state 31
    U32_TYPE                shift, and go to state 32
    U64_TYPE                shift, and go to state 33
    F16_TYPE                shift, and go to state 34
    F32_TYPE                shift, and go to state 35
    F64_TYPE                shift, and go to state 36
    FF64_TYPE               shift, and go to state 37
    B8_TYPE                 shift, and go to state 38
    B16_TYPE                shift, and go to state 39
    B32_TYPE                shift, and go to state 40
    B64_TYPE                shift, and go to state 41
    BB64_TYPE               shift, and go to state 42
    BB128_TYPE              shift, and go to state 43
    PRED_TYPE               shift, and go to state 44
    TEXREF_TYPE             shift, and go to state 45
    SAMPLERREF_TYPE         shift, and go to state 46
    SURFREF_TYPE            shift, and go to state 47
    V2_TYPE                 shift, and go to state 48
    V3_TYPE                 shift, and go to state 49
    V4_TYPE                 shift, and go to state 50

    function_defn         go to state 51
    function_decl         go to state 52
    function_decl_header  go to state 53
    directive_statement   go to state 54
    variable_declaration  go to state 55
    variable_spec         go to state 56
    var_spec_list         go to state 57
    var_spec              go to state 58
    align_spec            go to state 59
    space_spec            go to state 60
    addressable_spec      go to state 61
    type_spec             go to state 62
    vector_spec           go to state 63
    scalar_type           go to state 64


State 2

    0 $accept: input $end .

    $default  accept


State 3

   89 align_spec: ALIGN_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 65


State 4

   93 addressable_spec: CONST_DIRECTIVE .

    $default  reduce using rule 93 (addressable_spec)


State 5

   73 variable_declaration: CONSTPTR_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND

    IDENTIFIER  shift, and go to state 66


State 6

   25 function_decl_header: ENTRY_DIRECTIVE .

    $default  reduce using rule 25 (function_decl_header)


State 7

   31 function_decl_header: EXTERN_DIRECTIVE . FUNC_DIRECTIVE
   87 var_spec: EXTERN_DIRECTIVE .

    FUNC_DIRECTIVE  shift, and go to state 67

    $default  reduce using rule 87 (var_spec)


State 8

   65 directive_statement: FILE_DIRECTIVE . INT_OPERAND STRING
   66                    | FILE_DIRECTIVE . INT_OPERAND STRING COMMA INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 68


State 9

   28 function_decl_header: FUNC_DIRECTIVE .

    $default  reduce using rule 28 (function_decl_header)


State 10

   94 addressable_spec: GLOBAL_DIRECTIVE .

    $default  reduce using rule 94 (addressable_spec)


State 11

   95 addressable_spec: LOCAL_DIRECTIVE .

    $default  reduce using rule 95 (addressable_spec)


State 12

   67 directive_statement: LOC_DIRECTIVE . INT_OPERAND INT_OPERAND INT_OPERAND

    INT_OPERAND  shift, and go to state 69


State 13

   96 addressable_spec: PARAM_DIRECTIVE .

    $default  reduce using rule 96 (addressable_spec)


State 14

   68 directive_statement: PRAGMA_DIRECTIVE . STRING SEMI_COLON

    STRING  shift, and go to state 70


State 15

   90 space_spec: REG_DIRECTIVE .

    $default  reduce using rule 90 (space_spec)


State 16

   97 addressable_spec: SHARED_DIRECTIVE .

    $default  reduce using rule 97 (addressable_spec)


State 17

   91 space_spec: SREG_DIRECTIVE .

    $default  reduce using rule 91 (space_spec)


State 18

   98 addressable_spec: SSTARR_DIRECTIVE .

    $default  reduce using rule 98 (addressable_spec)


State 19

   99 addressable_spec: SURF_DIRECTIVE .

    $default  reduce using rule 99 (addressable_spec)


State 20

   62 directive_statement: TARGET_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER
   63                    | TARGET_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   64                    | TARGET_DIRECTIVE . IDENTIFIER

    IDENTIFIER  shift, and go to state 71


State 21

  100 addressable_spec: TEX_DIRECTIVE .

    $default  reduce using rule 100 (addressable_spec)


State 22

   59 directive_statement: VERSION_DIRECTIVE . DOUBLE_OPERAND
   60                    | VERSION_DIRECTIVE . DOUBLE_OPERAND PLUS

    DOUBLE_OPERAND  shift, and go to state 72


State 23

   61 directive_statement: ADDRESS_SIZE_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 73


State 24

   26 function_decl_header: VISIBLE_DIRECTIVE . ENTRY_DIRECTIVE
   29                     | VISIBLE_DIRECTIVE . FUNC_DIRECTIVE
   86 var_spec: VISIBLE_DIRECTIVE .

    ENTRY_DIRECTIVE  shift, and go to state 74
    FUNC_DIRECTIVE   shift, and go to state 75

    $default  reduce using rule 86 (var_spec)


State 25

   27 function_decl_header: WEAK_DIRECTIVE . ENTRY_DIRECTIVE
   30                     | WEAK_DIRECTIVE . FUNC_DIRECTIVE
   32                     | WEAK_DIRECTIVE . FUNC_DIRECTIVE
   88 var_spec: WEAK_DIRECTIVE .

    ENTRY_DIRECTIVE  shift, and go to state 76
    FUNC_DIRECTIVE   shift, and go to state 77

    $default  reduce using rule 88 (var_spec)


State 26

  106 scalar_type: S8_TYPE .

    $default  reduce using rule 106 (scalar_type)


State 27

  107 scalar_type: S16_TYPE .

    $default  reduce using rule 107 (scalar_type)


State 28

  108 scalar_type: S32_TYPE .

    $default  reduce using rule 108 (scalar_type)


State 29

  109 scalar_type: S64_TYPE .

    $default  reduce using rule 109 (scalar_type)


State 30

  110 scalar_type: U8_TYPE .

    $default  reduce using rule 110 (scalar_type)


State 31

  111 scalar_type: U16_TYPE .

    $default  reduce using rule 111 (scalar_type)


State 32

  112 scalar_type: U32_TYPE .

    $default  reduce using rule 112 (scalar_type)


State 33

  113 scalar_type: U64_TYPE .

    $default  reduce using rule 113 (scalar_type)


State 34

  114 scalar_type: F16_TYPE .

    $default  reduce using rule 114 (scalar_type)


State 35

  115 scalar_type: F32_TYPE .

    $default  reduce using rule 115 (scalar_type)


State 36

  116 scalar_type: F64_TYPE .

    $default  reduce using rule 116 (scalar_type)


State 37

  117 scalar_type: FF64_TYPE .

    $default  reduce using rule 117 (scalar_type)


State 38

  118 scalar_type: B8_TYPE .

    $default  reduce using rule 118 (scalar_type)


State 39

  119 scalar_type: B16_TYPE .

    $default  reduce using rule 119 (scalar_type)


State 40

  120 scalar_type: B32_TYPE .

    $default  reduce using rule 120 (scalar_type)


State 41

  121 scalar_type: B64_TYPE .

    $default  reduce using rule 121 (scalar_type)


State 42

  122 scalar_type: BB64_TYPE .

    $default  reduce using rule 122 (scalar_type)


State 43

  123 scalar_type: BB128_TYPE .

    $default  reduce using rule 123 (scalar_type)


State 44

  124 scalar_type: PRED_TYPE .

    $default  reduce using rule 124 (scalar_type)


State 45

  125 scalar_type: TEXREF_TYPE .

    $default  reduce using rule 125 (scalar_type)


State 46

  126 scalar_type: SAMPLERREF_TYPE .

    $default  reduce using rule 126 (scalar_type)


State 47

  127 scalar_type: SURFREF_TYPE .

    $default  reduce using rule 127 (scalar_type)


State 48

  103 vector_spec: V2_TYPE .

    $default  reduce using rule 103 (vector_spec)


State 49

  104 vector_spec: V3_TYPE .

    $default  reduce using rule 104 (vector_spec)


State 50

  105 vector_spec: V4_TYPE .

    $default  reduce using rule 105 (vector_spec)


State 51

    3 input: input function_defn .

    $default  reduce using rule 3 (input)


State 52

    4 input: input function_decl .
    6 function_defn: function_decl . $@1 statement_block
    9              | function_decl . $@2 block_spec_list $@3 statement_block
   69 directive_statement: function_decl . SEMI_COLON

    SEMI_COLON  shift, and go to state 78

    MAXNCTAPERSM_DIRECTIVE  reduce using rule 7 ($@2)
    MAXNTID_DIRECTIVE       reduce using rule 7 ($@2)
    MINNCTAPERSM_DIRECTIVE  reduce using rule 7 ($@2)
    LEFT_BRACE              reduce using rule 5 ($@1)
    $default                reduce using rule 4 (input)

    $@1  go to state 79
    $@2  go to state 80


State 53

   17 function_decl: function_decl_header . LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | function_decl_header . $@6 function_ident_param
   20              | function_decl_header .

    LEFT_PAREN  shift, and go to state 81

    IDENTIFIER  reduce using rule 18 ($@6)
    $default    reduce using rule 20 (function_decl)

    $@6  go to state 82


State 54

    2 input: input directive_statement .

    $default  reduce using rule 2 (input)


State 55

   58 directive_statement: variable_declaration . SEMI_COLON

    SEMI_COLON  shift, and go to state 83


State 56

   70 variable_declaration: variable_spec . identifier_list
   71                     | variable_spec . identifier_spec EQUALS initializer_list
   72                     | variable_spec . identifier_spec EQUALS literal_operand

    IDENTIFIER  shift, and go to state 84

    identifier_list  go to state 85
    identifier_spec  go to state 86


State 57

   74 variable_spec: var_spec_list .
   82 var_spec_list: var_spec_list . var_spec

    ALIGN_DIRECTIVE    shift, and go to state 3
    CONST_DIRECTIVE    shift, and go to state 4
    EXTERN_DIRECTIVE   shift, and go to state 87
    GLOBAL_DIRECTIVE   shift, and go to state 10
    LOCAL_DIRECTIVE    shift, and go to state 11
    PARAM_DIRECTIVE    shift, and go to state 13
    REG_DIRECTIVE      shift, and go to state 15
    SHARED_DIRECTIVE   shift, and go to state 16
    SREG_DIRECTIVE     shift, and go to state 17
    SSTARR_DIRECTIVE   shift, and go to state 18
    SURF_DIRECTIVE     shift, and go to state 19
    TEX_DIRECTIVE      shift, and go to state 21
    VISIBLE_DIRECTIVE  shift, and go to state 88
    WEAK_DIRECTIVE     shift, and go to state 89
    S8_TYPE            shift, and go to state 26
    S16_TYPE           shift, and go to state 27
    S32_TYPE           shift, and go to state 28
    S64_TYPE           shift, and go to state 29
    U8_TYPE            shift, and go to state 30
    U16_TYPE           shift, and go to state 31
    U32_TYPE           shift, and go to state 32
    U64_TYPE           shift, and go to state 33
    F16_TYPE           shift, and go to state 34
    F32_TYPE           shift, and go to state 35
    F64_TYPE           shift, and go to state 36
    FF64_TYPE          shift, and go to state 37
    B8_TYPE            shift, and go to state 38
    B16_TYPE           shift, and go to state 39
    B32_TYPE           shift, and go to state 40
    B64_TYPE           shift, and go to state 41
    BB64_TYPE          shift, and go to state 42
    BB128_TYPE         shift, and go to state 43
    PRED_TYPE          shift, and go to state 44
    TEXREF_TYPE        shift, and go to state 45
    SAMPLERREF_TYPE    shift, and go to state 46
    SURFREF_TYPE       shift, and go to state 47
    V2_TYPE            shift, and go to state 48
    V3_TYPE            shift, and go to state 49
    V4_TYPE            shift, and go to state 50

    $default  reduce using rule 74 (variable_spec)

    var_spec          go to state 90
    align_spec        go to state 59
    space_spec        go to state 60
    addressable_spec  go to state 61
    type_spec         go to state 62
    vector_spec       go to state 63
    scalar_type       go to state 64


State 58

   81 var_spec_list: var_spec .

    $default  reduce using rule 81 (var_spec_list)


State 59

   85 var_spec: align_spec .

    $default  reduce using rule 85 (var_spec)


State 60

   83 var_spec: space_spec .

    $default  reduce using rule 83 (var_spec)


State 61

   92 space_spec: addressable_spec .

    $default  reduce using rule 92 (space_spec)


State 62

   84 var_spec: type_spec .

    $default  reduce using rule 84 (var_spec)


State 63

  102 type_spec: vector_spec . scalar_type

    S8_TYPE          shift, and go to state 26
    S16_TYPE         shift, and go to state 27
    S32_TYPE         shift, and go to state 28
    S64_TYPE         shift, and go to state 29
    U8_TYPE          shift, and go to state 30
    U16_TYPE         shift, and go to state 31
    U32_TYPE         shift, and go to state 32
    U64_TYPE         shift, and go to state 33
    F16_TYPE         shift, and go to state 34
    F32_TYPE         shift, and go to state 35
    F64_TYPE         shift, and go to state 36
    FF64_TYPE        shift, and go to state 37
    B8_TYPE          shift, and go to state 38
    B16_TYPE         shift, and go to state 39
    B32_TYPE         shift, and go to state 40
    B64_TYPE         shift, and go to state 41
    BB64_TYPE        shift, and go to state 42
    BB128_TYPE       shift, and go to state 43
    PRED_TYPE        shift, and go to state 44
    TEXREF_TYPE      shift, and go to state 45
    SAMPLERREF_TYPE  shift, and go to state 46
    SURFREF_TYPE     shift, and go to state 47

    scalar_type  go to state 91


State 64

  101 type_spec: scalar_type .

    $default  reduce using rule 101 (type_spec)


State 65

   89 align_spec: ALIGN_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 89 (align_spec)


State 66

   73 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER COMMA INT_OPERAND

    COMMA  shift, and go to state 92


State 67

   31 function_decl_header: EXTERN_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 31 (function_decl_header)


State 68

   65 directive_statement: FILE_DIRECTIVE INT_OPERAND . STRING
   66                    | FILE_DIRECTIVE INT_OPERAND . STRING COMMA INT_OPERAND COMMA INT_OPERAND

    STRING  shift, and go to state 93


State 69

   67 directive_statement: LOC_DIRECTIVE INT_OPERAND . INT_OPERAND INT_OPERAND

    INT_OPERAND  shift, and go to state 94


State 70

   68 directive_statement: PRAGMA_DIRECTIVE STRING . SEMI_COLON

    SEMI_COLON  shift, and go to state 95


State 71

   62 directive_statement: TARGET_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER
   63                    | TARGET_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER
   64                    | TARGET_DIRECTIVE IDENTIFIER .

    COMMA  shift, and go to state 96

    $default  reduce using rule 64 (directive_statement)


State 72

   59 directive_statement: VERSION_DIRECTIVE DOUBLE_OPERAND .
   60                    | VERSION_DIRECTIVE DOUBLE_OPERAND . PLUS

    PLUS  shift, and go to state 97

    $default  reduce using rule 59 (directive_statement)


State 73

   61 directive_statement: ADDRESS_SIZE_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 61 (directive_statement)


State 74

   26 function_decl_header: VISIBLE_DIRECTIVE ENTRY_DIRECTIVE .

    $default  reduce using rule 26 (function_decl_header)


State 75

   29 function_decl_header: VISIBLE_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 29 (function_decl_header)


State 76

   27 function_decl_header: WEAK_DIRECTIVE ENTRY_DIRECTIVE .

    $default  reduce using rule 27 (function_decl_header)


State 77

   30 function_decl_header: WEAK_DIRECTIVE FUNC_DIRECTIVE .
   32                     | WEAK_DIRECTIVE FUNC_DIRECTIVE .

    $end                    reduce using rule 30 (function_decl_header)
    $end                    [reduce using rule 32 (function_decl_header)]
    ALIGN_DIRECTIVE         reduce using rule 30 (function_decl_header)
    ALIGN_DIRECTIVE         [reduce using rule 32 (function_decl_header)]
    CONST_DIRECTIVE         reduce using rule 30 (function_decl_header)
    CONST_DIRECTIVE         [reduce using rule 32 (function_decl_header)]
    CONSTPTR_DIRECTIVE      reduce using rule 30 (function_decl_header)
    CONSTPTR_DIRECTIVE      [reduce using rule 32 (function_decl_header)]
    ENTRY_DIRECTIVE         reduce using rule 30 (function_decl_header)
    ENTRY_DIRECTIVE         [reduce using rule 32 (function_decl_header)]
    EXTERN_DIRECTIVE        reduce using rule 30 (function_decl_header)
    EXTERN_DIRECTIVE        [reduce using rule 32 (function_decl_header)]
    FILE_DIRECTIVE          reduce using rule 30 (function_decl_header)
    FILE_DIRECTIVE          [reduce using rule 32 (function_decl_header)]
    FUNC_DIRECTIVE          reduce using rule 30 (function_decl_header)
    FUNC_DIRECTIVE          [reduce using rule 32 (function_decl_header)]
    GLOBAL_DIRECTIVE        reduce using rule 30 (function_decl_header)
    GLOBAL_DIRECTIVE        [reduce using rule 32 (function_decl_header)]
    LOCAL_DIRECTIVE         reduce using rule 30 (function_decl_header)
    LOCAL_DIRECTIVE         [reduce using rule 32 (function_decl_header)]
    LOC_DIRECTIVE           reduce using rule 30 (function_decl_header)
    LOC_DIRECTIVE           [reduce using rule 32 (function_decl_header)]
    MAXNCTAPERSM_DIRECTIVE  reduce using rule 30 (function_decl_header)
    MAXNCTAPERSM_DIRECTIVE  [reduce using rule 32 (function_decl_header)]
    MAXNTID_DIRECTIVE       reduce using rule 30 (function_decl_header)
    MAXNTID_DIRECTIVE       [reduce using rule 32 (function_decl_header)]
    MINNCTAPERSM_DIRECTIVE  reduce using rule 30 (function_decl_header)
    MINNCTAPERSM_DIRECTIVE  [reduce using rule 32 (function_decl_header)]
    PARAM_DIRECTIVE         reduce using rule 30 (function_decl_header)
    PARAM_DIRECTIVE         [reduce using rule 32 (function_decl_header)]
    PRAGMA_DIRECTIVE        reduce using rule 30 (function_decl_header)
    PRAGMA_DIRECTIVE        [reduce using rule 32 (function_decl_header)]
    REG_DIRECTIVE           reduce using rule 30 (function_decl_header)
    REG_DIRECTIVE           [reduce using rule 32 (function_decl_header)]
    SHARED_DIRECTIVE        reduce using rule 30 (function_decl_header)
    SHARED_DIRECTIVE        [reduce using rule 32 (function_decl_header)]
    SREG_DIRECTIVE          reduce using rule 30 (function_decl_header)
    SREG_DIRECTIVE          [reduce using rule 32 (function_decl_header)]
    SSTARR_DIRECTIVE        reduce using rule 30 (function_decl_header)
    SSTARR_DIRECTIVE        [reduce using rule 32 (function_decl_header)]
    SURF_DIRECTIVE          reduce using rule 30 (function_decl_header)
    SURF_DIRECTIVE          [reduce using rule 32 (function_decl_header)]
    TARGET_DIRECTIVE        reduce using rule 30 (function_decl_header)
    TARGET_DIRECTIVE        [reduce using rule 32 (function_decl_header)]
    TEX_DIRECTIVE           reduce using rule 30 (function_decl_header)
    TEX_DIRECTIVE           [reduce using rule 32 (function_decl_header)]
    VERSION_DIRECTIVE       reduce using rule 30 (function_decl_header)
    VERSION_DIRECTIVE       [reduce using rule 32 (function_decl_header)]
    ADDRESS_SIZE_DIRECTIVE  reduce using rule 30 (function_decl_header)
    ADDRESS_SIZE_DIRECTIVE  [reduce using rule 32 (function_decl_header)]
    VISIBLE_DIRECTIVE       reduce using rule 30 (function_decl_header)
    VISIBLE_DIRECTIVE       [reduce using rule 32 (function_decl_header)]
    WEAK_DIRECTIVE          reduce using rule 30 (function_decl_header)
    WEAK_DIRECTIVE          [reduce using rule 32 (function_decl_header)]
    IDENTIFIER              reduce using rule 30 (function_decl_header)
    IDENTIFIER              [reduce using rule 32 (function_decl_header)]
    S8_TYPE                 reduce using rule 30 (function_decl_header)
    S8_TYPE                 [reduce using rule 32 (function_decl_header)]
    S16_TYPE                reduce using rule 30 (function_decl_header)
    S16_TYPE                [reduce using rule 32 (function_decl_header)]
    S32_TYPE                reduce using rule 30 (function_decl_header)
    S32_TYPE                [reduce using rule 32 (function_decl_header)]
    S64_TYPE                reduce using rule 30 (function_decl_header)
    S64_TYPE                [reduce using rule 32 (function_decl_header)]
    U8_TYPE                 reduce using rule 30 (function_decl_header)
    U8_TYPE                 [reduce using rule 32 (function_decl_header)]
    U16_TYPE                reduce using rule 30 (function_decl_header)
    U16_TYPE                [reduce using rule 32 (function_decl_header)]
    U32_TYPE                reduce using rule 30 (function_decl_header)
    U32_TYPE                [reduce using rule 32 (function_decl_header)]
    U64_TYPE                reduce using rule 30 (function_decl_header)
    U64_TYPE                [reduce using rule 32 (function_decl_header)]
    F16_TYPE                reduce using rule 30 (function_decl_header)
    F16_TYPE                [reduce using rule 32 (function_decl_header)]
    F32_TYPE                reduce using rule 30 (function_decl_header)
    F32_TYPE                [reduce using rule 32 (function_decl_header)]
    F64_TYPE                reduce using rule 30 (function_decl_header)
    F64_TYPE                [reduce using rule 32 (function_decl_header)]
    FF64_TYPE               reduce using rule 30 (function_decl_header)
    FF64_TYPE               [reduce using rule 32 (function_decl_header)]
    B8_TYPE                 reduce using rule 30 (function_decl_header)
    B8_TYPE                 [reduce using rule 32 (function_decl_header)]
    B16_TYPE                reduce using rule 30 (function_decl_header)
    B16_TYPE                [reduce using rule 32 (function_decl_header)]
    B32_TYPE                reduce using rule 30 (function_decl_header)
    B32_TYPE                [reduce using rule 32 (function_decl_header)]
    B64_TYPE                reduce using rule 30 (function_decl_header)
    B64_TYPE                [reduce using rule 32 (function_decl_header)]
    BB64_TYPE               reduce using rule 30 (function_decl_header)
    BB64_TYPE               [reduce using rule 32 (function_decl_header)]
    BB128_TYPE              reduce using rule 30 (function_decl_header)
    BB128_TYPE              [reduce using rule 32 (function_decl_header)]
    PRED_TYPE               reduce using rule 30 (function_decl_header)
    PRED_TYPE               [reduce using rule 32 (function_decl_header)]
    TEXREF_TYPE             reduce using rule 30 (function_decl_header)
    TEXREF_TYPE             [reduce using rule 32 (function_decl_header)]
    SAMPLERREF_TYPE         reduce using rule 30 (function_decl_header)
    SAMPLERREF_TYPE         [reduce using rule 32 (function_decl_header)]
    SURFREF_TYPE            reduce using rule 30 (function_decl_header)
    SURFREF_TYPE            [reduce using rule 32 (function_decl_header)]
    V2_TYPE                 reduce using rule 30 (function_decl_header)
    V2_TYPE                 [reduce using rule 32 (function_decl_header)]
    V3_TYPE                 reduce using rule 30 (function_decl_header)
    V3_TYPE                 [reduce using rule 32 (function_decl_header)]
    V4_TYPE                 reduce using rule 30 (function_decl_header)
    V4_TYPE                 [reduce using rule 32 (function_decl_header)]
    SEMI_COLON              reduce using rule 30 (function_decl_header)
    SEMI_COLON              [reduce using rule 32 (function_decl_header)]
    LEFT_BRACE              reduce using rule 30 (function_decl_header)
    LEFT_BRACE              [reduce using rule 32 (function_decl_header)]
    LEFT_PAREN              reduce using rule 30 (function_decl_header)
    LEFT_PAREN              [reduce using rule 32 (function_decl_header)]
    $default                reduce using rule 30 (function_decl_header)


State 78

   69 directive_statement: function_decl SEMI_COLON .

    $default  reduce using rule 69 (directive_statement)


State 79

    6 function_defn: function_decl $@1 . statement_block

    LEFT_BRACE  shift, and go to state 98

    statement_block  go to state 99


State 80

    9 function_defn: function_decl $@2 . block_spec_list $@3 statement_block

    MAXNCTAPERSM_DIRECTIVE  shift, and go to state 100
    MAXNTID_DIRECTIVE       shift, and go to state 101
    MINNCTAPERSM_DIRECTIVE  shift, and go to state 102

    block_spec       go to state 103
    block_spec_list  go to state 104


State 81

   17 function_decl: function_decl_header LEFT_PAREN . $@4 param_entry RIGHT_PAREN $@5 function_ident_param

    $default  reduce using rule 15 ($@4)

    $@4  go to state 105


State 82

   19 function_decl: function_decl_header $@6 . function_ident_param

    IDENTIFIER  shift, and go to state 106

    function_ident_param  go to state 107


State 83

   58 directive_statement: variable_declaration SEMI_COLON .

    $default  reduce using rule 58 (directive_statement)


State 84

   77 identifier_spec: IDENTIFIER .
   78                | IDENTIFIER . LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   79                | IDENTIFIER . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   80                | IDENTIFIER . LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 108
    LEFT_ANGLE_BRACKET   shift, and go to state 109

    $default  reduce using rule 77 (identifier_spec)


State 85

   70 variable_declaration: variable_spec identifier_list .
   76 identifier_list: identifier_list . COMMA identifier_spec

    COMMA  shift, and go to state 110

    $default  reduce using rule 70 (variable_declaration)


State 86

   71 variable_declaration: variable_spec identifier_spec . EQUALS initializer_list
   72                     | variable_spec identifier_spec . EQUALS literal_operand
   75 identifier_list: identifier_spec .

    EQUALS  shift, and go to state 111

    $default  reduce using rule 75 (identifier_list)


State 87

   87 var_spec: EXTERN_DIRECTIVE .

    $default  reduce using rule 87 (var_spec)


State 88

   86 var_spec: VISIBLE_DIRECTIVE .

    $default  reduce using rule 86 (var_spec)


State 89

   88 var_spec: WEAK_DIRECTIVE .

    $default  reduce using rule 88 (var_spec)


State 90

   82 var_spec_list: var_spec_list var_spec .

    $default  reduce using rule 82 (var_spec_list)


State 91

  102 type_spec: vector_spec scalar_type .

    $default  reduce using rule 102 (type_spec)


State 92

   73 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER COMMA INT_OPERAND

    IDENTIFIER  shift, and go to state 112


State 93

   65 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING .
   66                    | FILE_DIRECTIVE INT_OPERAND STRING . COMMA INT_OPERAND COMMA INT_OPERAND

    COMMA  shift, and go to state 113

    $default  reduce using rule 65 (directive_statement)


State 94

   67 directive_statement: LOC_DIRECTIVE INT_OPERAND INT_OPERAND . INT_OPERAND

    INT_OPERAND  shift, and go to state 114


State 95

   68 directive_statement: PRAGMA_DIRECTIVE STRING SEMI_COLON .

    $default  reduce using rule 68 (directive_statement)


State 96

   62 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER
   63                    | TARGET_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 115


State 97

   60 directive_statement: VERSION_DIRECTIVE DOUBLE_OPERAND PLUS .

    $default  reduce using rule 60 (directive_statement)


State 98

   49 statement_block: LEFT_BRACE . statement_list RIGHT_BRACE

    OPCODE                  shift, and go to state 116
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SSTARR_DIRECTIVE        shift, and go to state 18
    SURF_DIRECTIVE          shift, and go to state 19
    TARGET_DIRECTIVE        shift, and go to state 20
    TEX_DIRECTIVE           shift, and go to state 21
    VERSION_DIRECTIVE       shift, and go to state 22
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 23
    VISIBLE_DIRECTIVE       shift, and go to state 24
    WEAK_DIRECTIVE          shift, and go to state 25
    IDENTIFIER              shift, and go to state 117
    S8_TYPE                 shift, and go to state 26
    S16_TYPE                shift, and go to state 27
    S32_TYPE                shift, and go to state 28
    S64_TYPE                shift, and go to state 29
    U8_TYPE                 shift, and go to state 30
    U16_TYPE                shift, and go to state 31
    U32_TYPE                shift, and go to state 32
    U64_TYPE                shift, and go to state 33
    F16_TYPE                shift, and go to state 34
    F32_TYPE                shift, and go to state 35
    F64_TYPE                shift, and go to state 36
    FF64_TYPE               shift, and go to state 37
    B8_TYPE                 shift, and go to state 38
    B16_TYPE                shift, and go to state 39
    B32_TYPE                shift, and go to state 40
    B64_TYPE                shift, and go to state 41
    BB64_TYPE               shift, and go to state 42
    BB128_TYPE              shift, and go to state 43
    PRED_TYPE               shift, and go to state 44
    TEXREF_TYPE             shift, and go to state 45
    SAMPLERREF_TYPE         shift, and go to state 46
    SURFREF_TYPE            shift, and go to state 47
    V2_TYPE                 shift, and go to state 48
    V3_TYPE                 shift, and go to state 49
    V4_TYPE                 shift, and go to state 50
    PRED                    shift, and go to state 118

    $default  reduce using rule 56 ($@13)

    function_decl          go to state 119
    function_decl_header   go to state 53
    statement_list         go to state 120
    $@13                   go to state 121
    directive_statement    go to state 122
    variable_declaration   go to state 55
    variable_spec          go to state 56
    var_spec_list          go to state 57
    var_spec               go to state 58
    align_spec             go to state 59
    space_spec             go to state 60
    addressable_spec       go to state 61
    type_spec              go to state 62
    vector_spec            go to state 63
    scalar_type            go to state 64
    instruction_statement  go to state 123
    instruction            go to state 124
    opcode_spec            go to state 125
    pred_spec              go to state 126


State 99

    6 function_defn: function_decl $@1 statement_block .

    $default  reduce using rule 6 (function_defn)


State 100

   12 block_spec: MAXNCTAPERSM_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 127


State 101

   10 block_spec: MAXNTID_DIRECTIVE . INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 128


State 102

   11 block_spec: MINNCTAPERSM_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 129


State 103

   13 block_spec_list: block_spec .

    $default  reduce using rule 13 (block_spec_list)


State 104

    9 function_defn: function_decl $@2 block_spec_list . $@3 statement_block
   14 block_spec_list: block_spec_list . block_spec

    MAXNCTAPERSM_DIRECTIVE  shift, and go to state 100
    MAXNTID_DIRECTIVE       shift, and go to state 101
    MINNCTAPERSM_DIRECTIVE  shift, and go to state 102

    $default  reduce using rule 8 ($@3)

    $@3         go to state 130
    block_spec  go to state 131


State 105

   17 function_decl: function_decl_header LEFT_PAREN $@4 . param_entry RIGHT_PAREN $@5 function_ident_param

    PARAM_DIRECTIVE  shift, and go to state 132
    REG_DIRECTIVE    shift, and go to state 133

    param_entry  go to state 134


State 106

   23 function_ident_param: IDENTIFIER . $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | IDENTIFIER .

    LEFT_PAREN  reduce using rule 21 ($@7)
    $default    reduce using rule 24 (function_ident_param)

    $@7  go to state 135


State 107

   19 function_decl: function_decl_header $@6 function_ident_param .

    $default  reduce using rule 19 (function_decl)


State 108

   79 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
   80                | IDENTIFIER LEFT_SQUARE_BRACKET . INT_OPERAND RIGHT_SQUARE_BRACKET

    INT_OPERAND           shift, and go to state 136
    RIGHT_SQUARE_BRACKET  shift, and go to state 137


State 109

   78 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET . INT_OPERAND RIGHT_ANGLE_BRACKET

    INT_OPERAND  shift, and go to state 138


State 110

   76 identifier_list: identifier_list COMMA . identifier_spec

    IDENTIFIER  shift, and go to state 84

    identifier_spec  go to state 139


State 111

   71 variable_declaration: variable_spec identifier_spec EQUALS . initializer_list
   72                     | variable_spec identifier_spec EQUALS . literal_operand

    INT_OPERAND     shift, and go to state 140
    FLOAT_OPERAND   shift, and go to state 141
    DOUBLE_OPERAND  shift, and go to state 142
    LEFT_BRACE      shift, and go to state 143

    initializer_list  go to state 144
    literal_operand   go to state 145


State 112

   73 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER . COMMA INT_OPERAND

    COMMA  shift, and go to state 146


State 113

   66 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING COMMA . INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 147


State 114

   67 directive_statement: LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND .

    $default  reduce using rule 67 (directive_statement)


State 115

   62 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER .
   63                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER

    COMMA  shift, and go to state 148

    $default  reduce using rule 62 (directive_statement)


State 116

  142 opcode_spec: OPCODE . $@15 option_list
  143            | OPCODE .

    IDENTIFIER           reduce using rule 143 (opcode_spec)
    INT_OPERAND          reduce using rule 143 (opcode_spec)
    FLOAT_OPERAND        reduce using rule 143 (opcode_spec)
    DOUBLE_OPERAND       reduce using rule 143 (opcode_spec)
    LEFT_SQUARE_BRACKET  reduce using rule 143 (opcode_spec)
    SPECIAL_REGISTER     reduce using rule 143 (opcode_spec)
    MINUS                reduce using rule 143 (opcode_spec)
    SEMI_COLON           reduce using rule 143 (opcode_spec)
    EXCLAMATION          reduce using rule 143 (opcode_spec)
    LEFT_BRACE           reduce using rule 143 (opcode_spec)
    LEFT_PAREN           reduce using rule 143 (opcode_spec)
    $default             reduce using rule 141 ($@15)

    $@15  go to state 149


State 117

  133 instruction_statement: IDENTIFIER . COLON

    COLON  shift, and go to state 150


State 118

  144 pred_spec: PRED . IDENTIFIER
  145          | PRED . EXCLAMATION IDENTIFIER
  146          | PRED . IDENTIFIER LT_OPTION
  147          | PRED . IDENTIFIER EQ_OPTION
  148          | PRED . IDENTIFIER LE_OPTION
  149          | PRED . IDENTIFIER NE_OPTION
  150          | PRED . IDENTIFIER GE_OPTION
  151          | PRED . IDENTIFIER EQU_OPTION
  152          | PRED . IDENTIFIER GTU_OPTION
  153          | PRED . IDENTIFIER NEU_OPTION
  154          | PRED . IDENTIFIER CF_OPTION
  155          | PRED . IDENTIFIER SF_OPTION
  156          | PRED . IDENTIFIER NSF_OPTION

    IDENTIFIER   shift, and go to state 151
    EXCLAMATION  shift, and go to state 152


State 119

   69 directive_statement: function_decl . SEMI_COLON

    SEMI_COLON  shift, and go to state 78


State 120

   49 statement_block: LEFT_BRACE statement_list . RIGHT_BRACE
   52 statement_list: statement_list . directive_statement
   53               | statement_list . instruction_statement
   55               | statement_list . $@12 statement_block

    OPCODE                  shift, and go to state 116
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SSTARR_DIRECTIVE        shift, and go to state 18
    SURF_DIRECTIVE          shift, and go to state 19
    TARGET_DIRECTIVE        shift, and go to state 20
    TEX_DIRECTIVE           shift, and go to state 21
    VERSION_DIRECTIVE       shift, and go to state 22
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 23
    VISIBLE_DIRECTIVE       shift, and go to state 24
    WEAK_DIRECTIVE          shift, and go to state 25
    IDENTIFIER              shift, and go to state 117
    S8_TYPE                 shift, and go to state 26
    S16_TYPE                shift, and go to state 27
    S32_TYPE                shift, and go to state 28
    S64_TYPE                shift, and go to state 29
    U8_TYPE                 shift, and go to state 30
    U16_TYPE                shift, and go to state 31
    U32_TYPE                shift, and go to state 32
    U64_TYPE                shift, and go to state 33
    F16_TYPE                shift, and go to state 34
    F32_TYPE                shift, and go to state 35
    F64_TYPE                shift, and go to state 36
    FF64_TYPE               shift, and go to state 37
    B8_TYPE                 shift, and go to state 38
    B16_TYPE                shift, and go to state 39
    B32_TYPE                shift, and go to state 40
    B64_TYPE                shift, and go to state 41
    BB64_TYPE               shift, and go to state 42
    BB128_TYPE              shift, and go to state 43
    PRED_TYPE               shift, and go to state 44
    TEXREF_TYPE             shift, and go to state 45
    SAMPLERREF_TYPE         shift, and go to state 46
    SURFREF_TYPE            shift, and go to state 47
    V2_TYPE                 shift, and go to state 48
    V3_TYPE                 shift, and go to state 49
    V4_TYPE                 shift, and go to state 50
    PRED                    shift, and go to state 118
    RIGHT_BRACE             shift, and go to state 153

    $default  reduce using rule 54 ($@12)

    function_decl          go to state 119
    function_decl_header   go to state 53
    $@12                   go to state 154
    directive_statement    go to state 155
    variable_declaration   go to state 55
    variable_spec          go to state 56
    var_spec_list          go to state 57
    var_spec               go to state 58
    align_spec             go to state 59
    space_spec             go to state 60
    addressable_spec       go to state 61
    type_spec              go to state 62
    vector_spec            go to state 63
    scalar_type            go to state 64
    instruction_statement  go to state 156
    instruction            go to state 124
    opcode_spec            go to state 125
    pred_spec              go to state 126


State 121

   57 statement_list: $@13 . statement_block

    LEFT_BRACE  shift, and go to state 98

    statement_block  go to state 157


State 122

   50 statement_list: directive_statement .

    $default  reduce using rule 50 (statement_list)


State 123

   51 statement_list: instruction_statement .

    $default  reduce using rule 51 (statement_list)


State 124

  132 instruction_statement: instruction . SEMI_COLON

    SEMI_COLON  shift, and go to state 158


State 125

  136 instruction: opcode_spec . LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  137            | opcode_spec . operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  138            | opcode_spec . operand COMMA LEFT_PAREN RIGHT_PAREN
  139            | opcode_spec . operand_list
  140            | opcode_spec .

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164
    LEFT_PAREN           shift, and go to state 165

    $default  reduce using rule 140 (instruction)

    operand_list     go to state 166
    operand          go to state 167
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 126

  134 instruction_statement: pred_spec . instruction SEMI_COLON

    OPCODE  shift, and go to state 116

    instruction  go to state 173
    opcode_spec  go to state 125


State 127

   12 block_spec: MAXNCTAPERSM_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 12 (block_spec)


State 128

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND . COMMA INT_OPERAND COMMA INT_OPERAND

    COMMA  shift, and go to state 174


State 129

   11 block_spec: MINNCTAPERSM_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 11 (block_spec)


State 130

    9 function_defn: function_decl $@2 block_spec_list $@3 . statement_block

    LEFT_BRACE  shift, and go to state 98

    statement_block  go to state 175


State 131

   14 block_spec_list: block_spec_list block_spec .

    $default  reduce using rule 14 (block_spec_list)


State 132

   38 param_entry: PARAM_DIRECTIVE . $@10 variable_spec ptr_spec identifier_spec

    $default  reduce using rule 37 ($@10)

    $@10  go to state 176


State 133

   40 param_entry: REG_DIRECTIVE . $@11 variable_spec identifier_spec

    $default  reduce using rule 39 ($@11)

    $@11  go to state 177


State 134

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry . RIGHT_PAREN $@5 function_ident_param

    RIGHT_PAREN  shift, and go to state 178


State 135

   23 function_ident_param: IDENTIFIER $@7 . LEFT_PAREN $@8 param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 179


State 136

   80 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 180


State 137

   79 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 79 (identifier_spec)


State 138

   78 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND . RIGHT_ANGLE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 181


State 139

   76 identifier_list: identifier_list COMMA identifier_spec .

    $default  reduce using rule 76 (identifier_list)


State 140

  292 literal_operand: INT_OPERAND .

    $default  reduce using rule 292 (literal_operand)


State 141

  293 literal_operand: FLOAT_OPERAND .

    $default  reduce using rule 293 (literal_operand)


State 142

  294 literal_operand: DOUBLE_OPERAND .

    $default  reduce using rule 294 (literal_operand)


State 143

  128 initializer_list: LEFT_BRACE . literal_list RIGHT_BRACE
  129                 | LEFT_BRACE . initializer_list RIGHT_BRACE

    INT_OPERAND     shift, and go to state 140
    FLOAT_OPERAND   shift, and go to state 141
    DOUBLE_OPERAND  shift, and go to state 142
    LEFT_BRACE      shift, and go to state 143

    initializer_list  go to state 182
    literal_list      go to state 183
    literal_operand   go to state 184


State 144

   71 variable_declaration: variable_spec identifier_spec EQUALS initializer_list .

    $default  reduce using rule 71 (variable_declaration)


State 145

   72 variable_declaration: variable_spec identifier_spec EQUALS literal_operand .

    $default  reduce using rule 72 (variable_declaration)


State 146

   73 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 185


State 147

   66 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING COMMA INT_OPERAND . COMMA INT_OPERAND

    COMMA  shift, and go to state 186


State 148

   63 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


State 149

  142 opcode_spec: OPCODE $@15 . option_list

    WMMA_DIRECTIVE    shift, and go to state 188
    CONST_DIRECTIVE   shift, and go to state 4
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    SHARED_DIRECTIVE  shift, and go to state 16
    SSTARR_DIRECTIVE  shift, and go to state 18
    SURF_DIRECTIVE    shift, and go to state 19
    TEX_DIRECTIVE     shift, and go to state 21
    S8_TYPE           shift, and go to state 26
    S16_TYPE          shift, and go to state 27
    S32_TYPE          shift, and go to state 28
    S64_TYPE          shift, and go to state 29
    U8_TYPE           shift, and go to state 30
    U16_TYPE          shift, and go to state 31
    U32_TYPE          shift, and go to state 32
    U64_TYPE          shift, and go to state 33
    F16_TYPE          shift, and go to state 34
    F32_TYPE          shift, and go to state 35
    F64_TYPE          shift, and go to state 36
    FF64_TYPE         shift, and go to state 37
    B8_TYPE           shift, and go to state 38
    B16_TYPE          shift, and go to state 39
    B32_TYPE          shift, and go to state 40
    B64_TYPE          shift, and go to state 41
    BB64_TYPE         shift, and go to state 42
    BB128_TYPE        shift, and go to state 43
    PRED_TYPE         shift, and go to state 44
    TEXREF_TYPE       shift, and go to state 45
    SAMPLERREF_TYPE   shift, and go to state 46
    SURFREF_TYPE      shift, and go to state 47
    V2_TYPE           shift, and go to state 48
    V3_TYPE           shift, and go to state 49
    V4_TYPE           shift, and go to state 50
    HALF_OPTION       shift, and go to state 189
    EXTP_OPTION       shift, and go to state 190
    EQ_OPTION         shift, and go to state 191
    NE_OPTION         shift, and go to state 192
    LT_OPTION         shift, and go to state 193
    LE_OPTION         shift, and go to state 194
    GT_OPTION         shift, and go to state 195
    GE_OPTION         shift, and go to state 196
    LO_OPTION         shift, and go to state 197
    LS_OPTION         shift, and go to state 198
    HI_OPTION         shift, and go to state 199
    HS_OPTION         shift, and go to state 200
    EQU_OPTION        shift, and go to state 201
    NEU_OPTION        shift, and go to state 202
    LTU_OPTION        shift, and go to state 203
    LEU_OPTION        shift, and go to state 204
    GTU_OPTION        shift, and go to state 205
    GEU_OPTION        shift, and go to state 206
    NUM_OPTION        shift, and go to state 207
    NAN_OPTION        shift, and go to state 208
    WIDE_OPTION       shift, and go to state 209
    RN_OPTION         shift, and go to state 210
    RZ_OPTION         shift, and go to state 211
    RM_OPTION         shift, and go to state 212
    RP_OPTION         shift, and go to state 213
    RNI_OPTION        shift, and go to state 214
    RZI_OPTION        shift, and go to state 215
    RMI_OPTION        shift, and go to state 216
    RPI_OPTION        shift, and go to state 217
    UNI_OPTION        shift, and go to state 218
    GEOM_MODIFIER_1D  shift, and go to state 219
    GEOM_MODIFIER_2D  shift, and go to state 220
    GEOM_MODIFIER_3D  shift, and go to state 221
    SAT_OPTION        shift, and go to state 222
    FTZ_OPTION        shift, and go to state 223
    NEG_OPTION        shift, and go to state 224
    SYNC_OPTION       shift, and go to state 225
    RED_OPTION        shift, and go to state 226
    ARRIVE_OPTION     shift, and go to state 227
    ATOMIC_POPC       shift, and go to state 228
    ATOMIC_AND        shift, and go to state 229
    ATOMIC_OR         shift, and go to state 230
    ATOMIC_XOR        shift, and go to state 231
    ATOMIC_CAS        shift, and go to state 232
    ATOMIC_EXCH       shift, and go to state 233
    ATOMIC_ADD        shift, and go to state 234
    ATOMIC_INC        shift, and go to state 235
    ATOMIC_DEC        shift, and go to state 236
    ATOMIC_MIN        shift, and go to state 237
    ATOMIC_MAX        shift, and go to state 238
    APPROX_OPTION     shift, and go to state 239
    FULL_OPTION       shift, and go to state 240
    ANY_OPTION        shift, and go to state 241
    ALL_OPTION        shift, and go to state 242
    BALLOT_OPTION     shift, and go to state 243
    GLOBAL_OPTION     shift, and go to state 244
    CTA_OPTION        shift, and go to state 245
    SYS_OPTION        shift, and go to state 246
    EXIT_OPTION       shift, and go to state 247
    ABS_OPTION        shift, and go to state 248
    TO_OPTION         shift, and go to state 249
    CA_OPTION         shift, and go to state 250
    CG_OPTION         shift, and go to state 251
    CS_OPTION         shift, and go to state 252
    LU_OPTION         shift, and go to state 253
    CV_OPTION         shift, and go to state 254
    WB_OPTION         shift, and go to state 255
    WT_OPTION         shift, and go to state 256
    NC_OPTION         shift, and go to state 257
    UP_OPTION         shift, and go to state 258
    DOWN_OPTION       shift, and go to state 259
    BFLY_OPTION       shift, and go to state 260
    IDX_OPTION        shift, and go to state 261
    PRMT_F4E_MODE     shift, and go to state 262
    PRMT_B4E_MODE     shift, and go to state 263
    PRMT_RC8_MODE     shift, and go to state 264
    PRMT_RC16_MODE    shift, and go to state 265
    PRMT_ECL_MODE     shift, and go to state 266
    PRMT_ECR_MODE     shift, and go to state 267

    addressable_spec              go to state 268
    type_spec                     go to state 269
    vector_spec                   go to state 63
    scalar_type                   go to state 64
    option_list                   go to state 270
    option                        go to state 271
    atomic_operation_spec         go to state 272
    rounding_mode                 go to state 273
    floating_point_rounding_mode  go to state 274
    integer_rounding_mode         go to state 275
    compare_spec                  go to state 276
    prmt_spec                     go to state 277
    wmma_spec                     go to state 278


State 150

  133 instruction_statement: IDENTIFIER COLON .

    $default  reduce using rule 133 (instruction_statement)


State 151

  144 pred_spec: PRED IDENTIFIER .
  146          | PRED IDENTIFIER . LT_OPTION
  147          | PRED IDENTIFIER . EQ_OPTION
  148          | PRED IDENTIFIER . LE_OPTION
  149          | PRED IDENTIFIER . NE_OPTION
  150          | PRED IDENTIFIER . GE_OPTION
  151          | PRED IDENTIFIER . EQU_OPTION
  152          | PRED IDENTIFIER . GTU_OPTION
  153          | PRED IDENTIFIER . NEU_OPTION
  154          | PRED IDENTIFIER . CF_OPTION
  155          | PRED IDENTIFIER . SF_OPTION
  156          | PRED IDENTIFIER . NSF_OPTION

    EQ_OPTION   shift, and go to state 279
    NE_OPTION   shift, and go to state 280
    LT_OPTION   shift, and go to state 281
    LE_OPTION   shift, and go to state 282
    GE_OPTION   shift, and go to state 283
    EQU_OPTION  shift, and go to state 284
    NEU_OPTION  shift, and go to state 285
    GTU_OPTION  shift, and go to state 286
    CF_OPTION   shift, and go to state 287
    SF_OPTION   shift, and go to state 288
    NSF_OPTION  shift, and go to state 289

    $default  reduce using rule 144 (pred_spec)


State 152

  145 pred_spec: PRED EXCLAMATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 290


State 153

   49 statement_block: LEFT_BRACE statement_list RIGHT_BRACE .

    $default  reduce using rule 49 (statement_block)


State 154

   55 statement_list: statement_list $@12 . statement_block

    LEFT_BRACE  shift, and go to state 98

    statement_block  go to state 291


State 155

   52 statement_list: statement_list directive_statement .

    $default  reduce using rule 52 (statement_list)


State 156

   53 statement_list: statement_list instruction_statement .

    $default  reduce using rule 53 (statement_list)


State 157

   57 statement_list: $@13 statement_block .

    $default  reduce using rule 57 (statement_list)


State 158

  132 instruction_statement: instruction SEMI_COLON .

    $default  reduce using rule 132 (instruction_statement)


State 159

  251 operand: IDENTIFIER .
  260        | IDENTIFIER . PLUS INT_OPERAND
  261        | IDENTIFIER . LO_OPTION
  263        | IDENTIFIER . HI_OPTION
  265        | IDENTIFIER . PIPE IDENTIFIER
  266        | IDENTIFIER . PIPE IDENTIFIER LO_OPTION
  267        | IDENTIFIER . PIPE IDENTIFIER HI_OPTION
  268        | IDENTIFIER . BACKSLASH IDENTIFIER
  269        | IDENTIFIER . BACKSLASH IDENTIFIER LO_OPTION
  270        | IDENTIFIER . BACKSLASH IDENTIFIER HI_OPTION
  281 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  282               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  283               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LO_OPTION            shift, and go to state 292
    HI_OPTION            shift, and go to state 293
    LEFT_SQUARE_BRACKET  shift, and go to state 294
    PLUS                 shift, and go to state 295
    PIPE                 shift, and go to state 296
    BACKSLASH            shift, and go to state 297

    $default  reduce using rule 251 (operand)


State 160

  277 tex_operand: LEFT_SQUARE_BRACKET . IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  280 memory_operand: LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET

    IDENTIFIER   shift, and go to state 298
    INT_OPERAND  shift, and go to state 299

    address_expression  go to state 300


State 161

  278 builtin_operand: SPECIAL_REGISTER . DIMENSION_MODIFIER
  279                | SPECIAL_REGISTER .

    DIMENSION_MODIFIER  shift, and go to state 301

    $default  reduce using rule 279 (builtin_operand)


State 162

  253 operand: MINUS . IDENTIFIER
  258        | MINUS . vector_operand
  262        | MINUS . IDENTIFIER LO_OPTION
  264        | MINUS . IDENTIFIER HI_OPTION
  284 memory_operand: MINUS . memory_operand

    IDENTIFIER           shift, and go to state 302
    LEFT_SQUARE_BRACKET  shift, and go to state 303
    MINUS                shift, and go to state 304
    LEFT_BRACE           shift, and go to state 164

    vector_operand  go to state 305
    memory_operand  go to state 306


State 163

  252 operand: EXCLAMATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 307


State 164

  271 vector_operand: LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  272               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  273               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  275               | LEFT_BRACE . IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 308


State 165

  136 instruction: opcode_spec LEFT_PAREN . operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164

    operand          go to state 309
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 166

  139 instruction: opcode_spec operand_list .

    $default  reduce using rule 139 (instruction)


State 167

  137 instruction: opcode_spec operand . COMMA LEFT_PAREN operand_list RIGHT_PAREN
  138            | opcode_spec operand . COMMA LEFT_PAREN RIGHT_PAREN
  249 operand_list: operand .
  250             | operand . COMMA operand_list

    COMMA  shift, and go to state 310

    $default  reduce using rule 249 (operand_list)


State 168

  257 operand: vector_operand .

    $default  reduce using rule 257 (operand)


State 169

  259 operand: tex_operand .

    $default  reduce using rule 259 (operand)


State 170

  256 operand: builtin_operand .

    $default  reduce using rule 256 (operand)


State 171

  254 operand: memory_operand .

    $default  reduce using rule 254 (operand)


State 172

  255 operand: literal_operand .

    $default  reduce using rule 255 (operand)


State 173

  134 instruction_statement: pred_spec instruction . SEMI_COLON

    SEMI_COLON  shift, and go to state 311


State 174

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA . INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 312


State 175

    9 function_defn: function_decl $@2 block_spec_list $@3 statement_block .

    $default  reduce using rule 9 (function_defn)


State 176

   38 param_entry: PARAM_DIRECTIVE $@10 . variable_spec ptr_spec identifier_spec

    ALIGN_DIRECTIVE    shift, and go to state 3
    CONST_DIRECTIVE    shift, and go to state 4
    EXTERN_DIRECTIVE   shift, and go to state 87
    GLOBAL_DIRECTIVE   shift, and go to state 10
    LOCAL_DIRECTIVE    shift, and go to state 11
    PARAM_DIRECTIVE    shift, and go to state 13
    REG_DIRECTIVE      shift, and go to state 15
    SHARED_DIRECTIVE   shift, and go to state 16
    SREG_DIRECTIVE     shift, and go to state 17
    SSTARR_DIRECTIVE   shift, and go to state 18
    SURF_DIRECTIVE     shift, and go to state 19
    TEX_DIRECTIVE      shift, and go to state 21
    VISIBLE_DIRECTIVE  shift, and go to state 88
    WEAK_DIRECTIVE     shift, and go to state 89
    S8_TYPE            shift, and go to state 26
    S16_TYPE           shift, and go to state 27
    S32_TYPE           shift, and go to state 28
    S64_TYPE           shift, and go to state 29
    U8_TYPE            shift, and go to state 30
    U16_TYPE           shift, and go to state 31
    U32_TYPE           shift, and go to state 32
    U64_TYPE           shift, and go to state 33
    F16_TYPE           shift, and go to state 34
    F32_TYPE           shift, and go to state 35
    F64_TYPE           shift, and go to state 36
    FF64_TYPE          shift, and go to state 37
    B8_TYPE            shift, and go to state 38
    B16_TYPE           shift, and go to state 39
    B32_TYPE           shift, and go to state 40
    B64_TYPE           shift, and go to state 41
    BB64_TYPE          shift, and go to state 42
    BB128_TYPE         shift, and go to state 43
    PRED_TYPE          shift, and go to state 44
    TEXREF_TYPE        shift, and go to state 45
    SAMPLERREF_TYPE    shift, and go to state 46
    SURFREF_TYPE       shift, and go to state 47
    V2_TYPE            shift, and go to state 48
    V3_TYPE            shift, and go to state 49
    V4_TYPE            shift, and go to state 50

    variable_spec     go to state 313
    var_spec_list     go to state 57
    var_spec          go to state 58
    align_spec        go to state 59
    space_spec        go to state 60
    addressable_spec  go to state 61
    type_spec         go to state 62
    vector_spec       go to state 63
    scalar_type       go to state 64


State 177

   40 param_entry: REG_DIRECTIVE $@11 . variable_spec identifier_spec

    ALIGN_DIRECTIVE    shift, and go to state 3
    CONST_DIRECTIVE    shift, and go to state 4
    EXTERN_DIRECTIVE   shift, and go to state 87
    GLOBAL_DIRECTIVE   shift, and go to state 10
    LOCAL_DIRECTIVE    shift, and go to state 11
    PARAM_DIRECTIVE    shift, and go to state 13
    REG_DIRECTIVE      shift, and go to state 15
    SHARED_DIRECTIVE   shift, and go to state 16
    SREG_DIRECTIVE     shift, and go to state 17
    SSTARR_DIRECTIVE   shift, and go to state 18
    SURF_DIRECTIVE     shift, and go to state 19
    TEX_DIRECTIVE      shift, and go to state 21
    VISIBLE_DIRECTIVE  shift, and go to state 88
    WEAK_DIRECTIVE     shift, and go to state 89
    S8_TYPE            shift, and go to state 26
    S16_TYPE           shift, and go to state 27
    S32_TYPE           shift, and go to state 28
    S64_TYPE           shift, and go to state 29
    U8_TYPE            shift, and go to state 30
    U16_TYPE           shift, and go to state 31
    U32_TYPE           shift, and go to state 32
    U64_TYPE           shift, and go to state 33
    F16_TYPE           shift, and go to state 34
    F32_TYPE           shift, and go to state 35
    F64_TYPE           shift, and go to state 36
    FF64_TYPE          shift, and go to state 37
    B8_TYPE            shift, and go to state 38
    B16_TYPE           shift, and go to state 39
    B32_TYPE           shift, and go to state 40
    B64_TYPE           shift, and go to state 41
    BB64_TYPE          shift, and go to state 42
    BB128_TYPE         shift, and go to state 43
    PRED_TYPE          shift, and go to state 44
    TEXREF_TYPE        shift, and go to state 45
    SAMPLERREF_TYPE    shift, and go to state 46
    SURFREF_TYPE       shift, and go to state 47
    V2_TYPE            shift, and go to state 48
    V3_TYPE            shift, and go to state 49
    V4_TYPE            shift, and go to state 50

    variable_spec     go to state 314
    var_spec_list     go to state 57
    var_spec          go to state 58
    align_spec        go to state 59
    space_spec        go to state 60
    addressable_spec  go to state 61
    type_spec         go to state 62
    vector_spec       go to state 63
    scalar_type       go to state 64


State 178

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN . $@5 function_ident_param

    $default  reduce using rule 16 ($@5)

    $@5  go to state 315


State 179

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN . $@8 param_list RIGHT_PAREN

    $default  reduce using rule 22 ($@8)

    $@8  go to state 316


State 180

   80 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 80 (identifier_spec)


State 181

   78 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 78 (identifier_spec)


State 182

  129 initializer_list: LEFT_BRACE initializer_list . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 317


State 183

  128 initializer_list: LEFT_BRACE literal_list . RIGHT_BRACE
  131 literal_list: literal_list . COMMA literal_operand

    COMMA        shift, and go to state 318
    RIGHT_BRACE  shift, and go to state 319


State 184

  130 literal_list: literal_operand .

    $default  reduce using rule 130 (literal_list)


State 185

   73 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND .

    $default  reduce using rule 73 (variable_declaration)


State 186

   66 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING COMMA INT_OPERAND COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 320


State 187

   63 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER .

    $default  reduce using rule 63 (directive_statement)


State 188

  247 wmma_spec: WMMA_DIRECTIVE . LAYOUT CONFIGURATION
  248          | WMMA_DIRECTIVE . LAYOUT LAYOUT CONFIGURATION

    LAYOUT  shift, and go to state 321


State 189

  188 option: HALF_OPTION .

    $default  reduce using rule 188 (option)


State 190

  189 option: EXTP_OPTION .

    $default  reduce using rule 189 (option)


State 191

  223 compare_spec: EQ_OPTION .

    $default  reduce using rule 223 (compare_spec)


State 192

  224 compare_spec: NE_OPTION .

    $default  reduce using rule 224 (compare_spec)


State 193

  225 compare_spec: LT_OPTION .

    $default  reduce using rule 225 (compare_spec)


State 194

  226 compare_spec: LE_OPTION .

    $default  reduce using rule 226 (compare_spec)


State 195

  227 compare_spec: GT_OPTION .

    $default  reduce using rule 227 (compare_spec)


State 196

  228 compare_spec: GE_OPTION .

    $default  reduce using rule 228 (compare_spec)


State 197

  229 compare_spec: LO_OPTION .

    $default  reduce using rule 229 (compare_spec)


State 198

  230 compare_spec: LS_OPTION .

    $default  reduce using rule 230 (compare_spec)


State 199

  231 compare_spec: HI_OPTION .

    $default  reduce using rule 231 (compare_spec)


State 200

  232 compare_spec: HS_OPTION .

    $default  reduce using rule 232 (compare_spec)


State 201

  233 compare_spec: EQU_OPTION .

    $default  reduce using rule 233 (compare_spec)


State 202

  234 compare_spec: NEU_OPTION .

    $default  reduce using rule 234 (compare_spec)


State 203

  235 compare_spec: LTU_OPTION .

    $default  reduce using rule 235 (compare_spec)


State 204

  236 compare_spec: LEU_OPTION .

    $default  reduce using rule 236 (compare_spec)


State 205

  237 compare_spec: GTU_OPTION .

    $default  reduce using rule 237 (compare_spec)


State 206

  238 compare_spec: GEU_OPTION .

    $default  reduce using rule 238 (compare_spec)


State 207

  239 compare_spec: NUM_OPTION .

    $default  reduce using rule 239 (compare_spec)


State 208

  240 compare_spec: NAN_OPTION .

    $default  reduce using rule 240 (compare_spec)


State 209

  169 option: WIDE_OPTION .

    $default  reduce using rule 169 (option)


State 210

  215 floating_point_rounding_mode: RN_OPTION .

    $default  reduce using rule 215 (floating_point_rounding_mode)


State 211

  216 floating_point_rounding_mode: RZ_OPTION .

    $default  reduce using rule 216 (floating_point_rounding_mode)


State 212

  217 floating_point_rounding_mode: RM_OPTION .

    $default  reduce using rule 217 (floating_point_rounding_mode)


State 213

  218 floating_point_rounding_mode: RP_OPTION .

    $default  reduce using rule 218 (floating_point_rounding_mode)


State 214

  219 integer_rounding_mode: RNI_OPTION .

    $default  reduce using rule 219 (integer_rounding_mode)


State 215

  220 integer_rounding_mode: RZI_OPTION .

    $default  reduce using rule 220 (integer_rounding_mode)


State 216

  221 integer_rounding_mode: RMI_OPTION .

    $default  reduce using rule 221 (integer_rounding_mode)


State 217

  222 integer_rounding_mode: RPI_OPTION .

    $default  reduce using rule 222 (integer_rounding_mode)


State 218

  168 option: UNI_OPTION .

    $default  reduce using rule 168 (option)


State 219

  176 option: GEOM_MODIFIER_1D .

    $default  reduce using rule 176 (option)


State 220

  177 option: GEOM_MODIFIER_2D .

    $default  reduce using rule 177 (option)


State 221

  178 option: GEOM_MODIFIER_3D .

    $default  reduce using rule 178 (option)


State 222

  179 option: SAT_OPTION .

    $default  reduce using rule 179 (option)


State 223

  180 option: FTZ_OPTION .

    $default  reduce using rule 180 (option)


State 224

  181 option: NEG_OPTION .

    $default  reduce using rule 181 (option)


State 225

  165 option: SYNC_OPTION .

    $default  reduce using rule 165 (option)


State 226

  167 option: RED_OPTION .

    $default  reduce using rule 167 (option)


State 227

  166 option: ARRIVE_OPTION .

    $default  reduce using rule 166 (option)


State 228

  203 atomic_operation_spec: ATOMIC_POPC .

    $default  reduce using rule 203 (atomic_operation_spec)


State 229

  202 atomic_operation_spec: ATOMIC_AND .

    $default  reduce using rule 202 (atomic_operation_spec)


State 230

  204 atomic_operation_spec: ATOMIC_OR .

    $default  reduce using rule 204 (atomic_operation_spec)


State 231

  205 atomic_operation_spec: ATOMIC_XOR .

    $default  reduce using rule 205 (atomic_operation_spec)


State 232

  206 atomic_operation_spec: ATOMIC_CAS .

    $default  reduce using rule 206 (atomic_operation_spec)


State 233

  207 atomic_operation_spec: ATOMIC_EXCH .

    $default  reduce using rule 207 (atomic_operation_spec)


State 234

  208 atomic_operation_spec: ATOMIC_ADD .

    $default  reduce using rule 208 (atomic_operation_spec)


State 235

  209 atomic_operation_spec: ATOMIC_INC .

    $default  reduce using rule 209 (atomic_operation_spec)


State 236

  210 atomic_operation_spec: ATOMIC_DEC .

    $default  reduce using rule 210 (atomic_operation_spec)


State 237

  211 atomic_operation_spec: ATOMIC_MIN .

    $default  reduce using rule 211 (atomic_operation_spec)


State 238

  212 atomic_operation_spec: ATOMIC_MAX .

    $default  reduce using rule 212 (atomic_operation_spec)


State 239

  182 option: APPROX_OPTION .

    $default  reduce using rule 182 (option)


State 240

  183 option: FULL_OPTION .

    $default  reduce using rule 183 (option)


State 241

  170 option: ANY_OPTION .

    $default  reduce using rule 170 (option)


State 242

  171 option: ALL_OPTION .

    $default  reduce using rule 171 (option)


State 243

  172 option: BALLOT_OPTION .

    $default  reduce using rule 172 (option)


State 244

  173 option: GLOBAL_OPTION .

    $default  reduce using rule 173 (option)


State 245

  174 option: CTA_OPTION .

    $default  reduce using rule 174 (option)


State 246

  175 option: SYS_OPTION .

    $default  reduce using rule 175 (option)


State 247

  184 option: EXIT_OPTION .

    $default  reduce using rule 184 (option)


State 248

  185 option: ABS_OPTION .

    $default  reduce using rule 185 (option)


State 249

  187 option: TO_OPTION .

    $default  reduce using rule 187 (option)


State 250

  190 option: CA_OPTION .

    $default  reduce using rule 190 (option)


State 251

  191 option: CG_OPTION .

    $default  reduce using rule 191 (option)


State 252

  192 option: CS_OPTION .

    $default  reduce using rule 192 (option)


State 253

  193 option: LU_OPTION .

    $default  reduce using rule 193 (option)


State 254

  194 option: CV_OPTION .

    $default  reduce using rule 194 (option)


State 255

  195 option: WB_OPTION .

    $default  reduce using rule 195 (option)


State 256

  196 option: WT_OPTION .

    $default  reduce using rule 196 (option)


State 257

  197 option: NC_OPTION .

    $default  reduce using rule 197 (option)


State 258

  198 option: UP_OPTION .

    $default  reduce using rule 198 (option)


State 259

  199 option: DOWN_OPTION .

    $default  reduce using rule 199 (option)


State 260

  200 option: BFLY_OPTION .

    $default  reduce using rule 200 (option)


State 261

  201 option: IDX_OPTION .

    $default  reduce using rule 201 (option)


State 262

  241 prmt_spec: PRMT_F4E_MODE .

    $default  reduce using rule 241 (prmt_spec)


State 263

  242 prmt_spec: PRMT_B4E_MODE .

    $default  reduce using rule 242 (prmt_spec)


State 264

  243 prmt_spec: PRMT_RC8_MODE .

    $default  reduce using rule 243 (prmt_spec)


State 265

  244 prmt_spec: PRMT_RC16_MODE .

    $default  reduce using rule 244 (prmt_spec)


State 266

  245 prmt_spec: PRMT_ECL_MODE .

    $default  reduce using rule 245 (prmt_spec)


State 267

  246 prmt_spec: PRMT_ECR_MODE .

    $default  reduce using rule 246 (prmt_spec)


State 268

  161 option: addressable_spec .

    $default  reduce using rule 161 (option)


State 269

  159 option: type_spec .

    $default  reduce using rule 159 (option)


State 270

  142 opcode_spec: OPCODE $@15 option_list .

    $default  reduce using rule 142 (opcode_spec)


State 271

  157 option_list: option .
  158            | option . option_list

    WMMA_DIRECTIVE    shift, and go to state 188
    CONST_DIRECTIVE   shift, and go to state 4
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    SHARED_DIRECTIVE  shift, and go to state 16
    SSTARR_DIRECTIVE  shift, and go to state 18
    SURF_DIRECTIVE    shift, and go to state 19
    TEX_DIRECTIVE     shift, and go to state 21
    S8_TYPE           shift, and go to state 26
    S16_TYPE          shift, and go to state 27
    S32_TYPE          shift, and go to state 28
    S64_TYPE          shift, and go to state 29
    U8_TYPE           shift, and go to state 30
    U16_TYPE          shift, and go to state 31
    U32_TYPE          shift, and go to state 32
    U64_TYPE          shift, and go to state 33
    F16_TYPE          shift, and go to state 34
    F32_TYPE          shift, and go to state 35
    F64_TYPE          shift, and go to state 36
    FF64_TYPE         shift, and go to state 37
    B8_TYPE           shift, and go to state 38
    B16_TYPE          shift, and go to state 39
    B32_TYPE          shift, and go to state 40
    B64_TYPE          shift, and go to state 41
    BB64_TYPE         shift, and go to state 42
    BB128_TYPE        shift, and go to state 43
    PRED_TYPE         shift, and go to state 44
    TEXREF_TYPE       shift, and go to state 45
    SAMPLERREF_TYPE   shift, and go to state 46
    SURFREF_TYPE      shift, and go to state 47
    V2_TYPE           shift, and go to state 48
    V3_TYPE           shift, and go to state 49
    V4_TYPE           shift, and go to state 50
    HALF_OPTION       shift, and go to state 189
    EXTP_OPTION       shift, and go to state 190
    EQ_OPTION         shift, and go to state 191
    NE_OPTION         shift, and go to state 192
    LT_OPTION         shift, and go to state 193
    LE_OPTION         shift, and go to state 194
    GT_OPTION         shift, and go to state 195
    GE_OPTION         shift, and go to state 196
    LO_OPTION         shift, and go to state 197
    LS_OPTION         shift, and go to state 198
    HI_OPTION         shift, and go to state 199
    HS_OPTION         shift, and go to state 200
    EQU_OPTION        shift, and go to state 201
    NEU_OPTION        shift, and go to state 202
    LTU_OPTION        shift, and go to state 203
    LEU_OPTION        shift, and go to state 204
    GTU_OPTION        shift, and go to state 205
    GEU_OPTION        shift, and go to state 206
    NUM_OPTION        shift, and go to state 207
    NAN_OPTION        shift, and go to state 208
    WIDE_OPTION       shift, and go to state 209
    RN_OPTION         shift, and go to state 210
    RZ_OPTION         shift, and go to state 211
    RM_OPTION         shift, and go to state 212
    RP_OPTION         shift, and go to state 213
    RNI_OPTION        shift, and go to state 214
    RZI_OPTION        shift, and go to state 215
    RMI_OPTION        shift, and go to state 216
    RPI_OPTION        shift, and go to state 217
    UNI_OPTION        shift, and go to state 218
    GEOM_MODIFIER_1D  shift, and go to state 219
    GEOM_MODIFIER_2D  shift, and go to state 220
    GEOM_MODIFIER_3D  shift, and go to state 221
    SAT_OPTION        shift, and go to state 222
    FTZ_OPTION        shift, and go to state 223
    NEG_OPTION        shift, and go to state 224
    SYNC_OPTION       shift, and go to state 225
    RED_OPTION        shift, and go to state 226
    ARRIVE_OPTION     shift, and go to state 227
    ATOMIC_POPC       shift, and go to state 228
    ATOMIC_AND        shift, and go to state 229
    ATOMIC_OR         shift, and go to state 230
    ATOMIC_XOR        shift, and go to state 231
    ATOMIC_CAS        shift, and go to state 232
    ATOMIC_EXCH       shift, and go to state 233
    ATOMIC_ADD        shift, and go to state 234
    ATOMIC_INC        shift, and go to state 235
    ATOMIC_DEC        shift, and go to state 236
    ATOMIC_MIN        shift, and go to state 237
    ATOMIC_MAX        shift, and go to state 238
    APPROX_OPTION     shift, and go to state 239
    FULL_OPTION       shift, and go to state 240
    ANY_OPTION        shift, and go to state 241
    ALL_OPTION        shift, and go to state 242
    BALLOT_OPTION     shift, and go to state 243
    GLOBAL_OPTION     shift, and go to state 244
    CTA_OPTION        shift, and go to state 245
    SYS_OPTION        shift, and go to state 246
    EXIT_OPTION       shift, and go to state 247
    ABS_OPTION        shift, and go to state 248
    TO_OPTION         shift, and go to state 249
    CA_OPTION         shift, and go to state 250
    CG_OPTION         shift, and go to state 251
    CS_OPTION         shift, and go to state 252
    LU_OPTION         shift, and go to state 253
    CV_OPTION         shift, and go to state 254
    WB_OPTION         shift, and go to state 255
    WT_OPTION         shift, and go to state 256
    NC_OPTION         shift, and go to state 257
    UP_OPTION         shift, and go to state 258
    DOWN_OPTION       shift, and go to state 259
    BFLY_OPTION       shift, and go to state 260
    IDX_OPTION        shift, and go to state 261
    PRMT_F4E_MODE     shift, and go to state 262
    PRMT_B4E_MODE     shift, and go to state 263
    PRMT_RC8_MODE     shift, and go to state 264
    PRMT_RC16_MODE    shift, and go to state 265
    PRMT_ECL_MODE     shift, and go to state 266
    PRMT_ECR_MODE     shift, and go to state 267

    $default  reduce using rule 157 (option_list)

    addressable_spec              go to state 268
    type_spec                     go to state 269
    vector_spec                   go to state 63
    scalar_type                   go to state 64
    option_list                   go to state 322
    option                        go to state 271
    atomic_operation_spec         go to state 272
    rounding_mode                 go to state 273
    floating_point_rounding_mode  go to state 274
    integer_rounding_mode         go to state 275
    compare_spec                  go to state 276
    prmt_spec                     go to state 277
    wmma_spec                     go to state 278


State 272

  186 option: atomic_operation_spec .

    $default  reduce using rule 186 (option)


State 273

  162 option: rounding_mode .

    $default  reduce using rule 162 (option)


State 274

  213 rounding_mode: floating_point_rounding_mode .

    $default  reduce using rule 213 (rounding_mode)


State 275

  214 rounding_mode: integer_rounding_mode .

    $default  reduce using rule 214 (rounding_mode)


State 276

  160 option: compare_spec .

    $default  reduce using rule 160 (option)


State 277

  164 option: prmt_spec .

    $default  reduce using rule 164 (option)


State 278

  163 option: wmma_spec .

    $default  reduce using rule 163 (option)


State 279

  147 pred_spec: PRED IDENTIFIER EQ_OPTION .

    $default  reduce using rule 147 (pred_spec)


State 280

  149 pred_spec: PRED IDENTIFIER NE_OPTION .

    $default  reduce using rule 149 (pred_spec)


State 281

  146 pred_spec: PRED IDENTIFIER LT_OPTION .

    $default  reduce using rule 146 (pred_spec)


State 282

  148 pred_spec: PRED IDENTIFIER LE_OPTION .

    $default  reduce using rule 148 (pred_spec)


State 283

  150 pred_spec: PRED IDENTIFIER GE_OPTION .

    $default  reduce using rule 150 (pred_spec)


State 284

  151 pred_spec: PRED IDENTIFIER EQU_OPTION .

    $default  reduce using rule 151 (pred_spec)


State 285

  153 pred_spec: PRED IDENTIFIER NEU_OPTION .

    $default  reduce using rule 153 (pred_spec)


State 286

  152 pred_spec: PRED IDENTIFIER GTU_OPTION .

    $default  reduce using rule 152 (pred_spec)


State 287

  154 pred_spec: PRED IDENTIFIER CF_OPTION .

    $default  reduce using rule 154 (pred_spec)


State 288

  155 pred_spec: PRED IDENTIFIER SF_OPTION .

    $default  reduce using rule 155 (pred_spec)


State 289

  156 pred_spec: PRED IDENTIFIER NSF_OPTION .

    $default  reduce using rule 156 (pred_spec)


State 290

  145 pred_spec: PRED EXCLAMATION IDENTIFIER .

    $default  reduce using rule 145 (pred_spec)


State 291

   55 statement_list: statement_list $@12 statement_block .

    $default  reduce using rule 55 (statement_list)


State 292

  261 operand: IDENTIFIER LO_OPTION .

    $default  reduce using rule 261 (operand)


State 293

  263 operand: IDENTIFIER HI_OPTION .

    $default  reduce using rule 263 (operand)


State 294

  281 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  282               | IDENTIFIER LEFT_SQUARE_BRACKET . literal_operand RIGHT_SQUARE_BRACKET
  283               | IDENTIFIER LEFT_SQUARE_BRACKET . twin_operand RIGHT_SQUARE_BRACKET

    IDENTIFIER      shift, and go to state 323
    INT_OPERAND     shift, and go to state 324
    FLOAT_OPERAND   shift, and go to state 141
    DOUBLE_OPERAND  shift, and go to state 142

    twin_operand        go to state 325
    literal_operand     go to state 326
    address_expression  go to state 327


State 295

  260 operand: IDENTIFIER PLUS . INT_OPERAND

    INT_OPERAND  shift, and go to state 328


State 296

  265 operand: IDENTIFIER PIPE . IDENTIFIER
  266        | IDENTIFIER PIPE . IDENTIFIER LO_OPTION
  267        | IDENTIFIER PIPE . IDENTIFIER HI_OPTION

    IDENTIFIER  shift, and go to state 329


State 297

  268 operand: IDENTIFIER BACKSLASH . IDENTIFIER
  269        | IDENTIFIER BACKSLASH . IDENTIFIER LO_OPTION
  270        | IDENTIFIER BACKSLASH . IDENTIFIER HI_OPTION

    IDENTIFIER  shift, and go to state 330


State 298

  277 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER . COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET
  295 address_expression: IDENTIFIER .
  296                   | IDENTIFIER . LO_OPTION
  297                   | IDENTIFIER . HI_OPTION
  298                   | IDENTIFIER . PLUS INT_OPERAND

    COMMA      shift, and go to state 331
    LO_OPTION  shift, and go to state 332
    HI_OPTION  shift, and go to state 333
    PLUS       shift, and go to state 334

    $default  reduce using rule 295 (address_expression)


State 299

  299 address_expression: INT_OPERAND .

    $default  reduce using rule 299 (address_expression)


State 300

  280 memory_operand: LEFT_SQUARE_BRACKET address_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 335


State 301

  278 builtin_operand: SPECIAL_REGISTER DIMENSION_MODIFIER .

    $default  reduce using rule 278 (builtin_operand)


State 302

  253 operand: MINUS IDENTIFIER .
  262        | MINUS IDENTIFIER . LO_OPTION
  264        | MINUS IDENTIFIER . HI_OPTION
  281 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  282               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  283               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LO_OPTION            shift, and go to state 336
    HI_OPTION            shift, and go to state 337
    LEFT_SQUARE_BRACKET  shift, and go to state 294

    $default  reduce using rule 253 (operand)


State 303

  280 memory_operand: LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET

    IDENTIFIER   shift, and go to state 338
    INT_OPERAND  shift, and go to state 299

    address_expression  go to state 300


State 304

  284 memory_operand: MINUS . memory_operand

    IDENTIFIER           shift, and go to state 339
    LEFT_SQUARE_BRACKET  shift, and go to state 303
    MINUS                shift, and go to state 304

    memory_operand  go to state 306


State 305

  258 operand: MINUS vector_operand .

    $default  reduce using rule 258 (operand)


State 306

  284 memory_operand: MINUS memory_operand .

    $default  reduce using rule 284 (memory_operand)


State 307

  252 operand: EXCLAMATION IDENTIFIER .

    $default  reduce using rule 252 (operand)


State 308

  271 vector_operand: LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  272               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  273               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  275               | LEFT_BRACE IDENTIFIER . RIGHT_BRACE

    COMMA        shift, and go to state 340
    RIGHT_BRACE  shift, and go to state 341


State 309

  136 instruction: opcode_spec LEFT_PAREN operand . RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 342


State 310

  137 instruction: opcode_spec operand COMMA . LEFT_PAREN operand_list RIGHT_PAREN
  138            | opcode_spec operand COMMA . LEFT_PAREN RIGHT_PAREN
  250 operand_list: operand COMMA . operand_list

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164
    LEFT_PAREN           shift, and go to state 343

    operand_list     go to state 344
    operand          go to state 345
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 311

  134 instruction_statement: pred_spec instruction SEMI_COLON .

    $default  reduce using rule 134 (instruction_statement)


State 312

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND . COMMA INT_OPERAND

    COMMA  shift, and go to state 346


State 313

   38 param_entry: PARAM_DIRECTIVE $@10 variable_spec . ptr_spec identifier_spec

    PTR_DIRECTIVE  shift, and go to state 347

    $default  reduce using rule 41 (ptr_spec)

    ptr_spec  go to state 348


State 314

   40 param_entry: REG_DIRECTIVE $@11 variable_spec . identifier_spec

    IDENTIFIER  shift, and go to state 84

    identifier_spec  go to state 349


State 315

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 . function_ident_param

    IDENTIFIER  shift, and go to state 106

    function_ident_param  go to state 350


State 316

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 . param_list RIGHT_PAREN

    PARAM_DIRECTIVE  shift, and go to state 132
    REG_DIRECTIVE    shift, and go to state 133

    $default  reduce using rule 33 (param_list)

    param_list   go to state 351
    param_entry  go to state 352


State 317

  129 initializer_list: LEFT_BRACE initializer_list RIGHT_BRACE .

    $default  reduce using rule 129 (initializer_list)


State 318

  131 literal_list: literal_list COMMA . literal_operand

    INT_OPERAND     shift, and go to state 140
    FLOAT_OPERAND   shift, and go to state 141
    DOUBLE_OPERAND  shift, and go to state 142

    literal_operand  go to state 353


State 319

  128 initializer_list: LEFT_BRACE literal_list RIGHT_BRACE .

    $default  reduce using rule 128 (initializer_list)


State 320

   66 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING COMMA INT_OPERAND COMMA INT_OPERAND .

    $default  reduce using rule 66 (directive_statement)


State 321

  247 wmma_spec: WMMA_DIRECTIVE LAYOUT . CONFIGURATION
  248          | WMMA_DIRECTIVE LAYOUT . LAYOUT CONFIGURATION

    LAYOUT         shift, and go to state 354
    CONFIGURATION  shift, and go to state 355


State 322

  158 option_list: option option_list .

    $default  reduce using rule 158 (option_list)


State 323

  285 twin_operand: IDENTIFIER . PLUS IDENTIFIER
  286             | IDENTIFIER . PLUS IDENTIFIER LO_OPTION
  287             | IDENTIFIER . PLUS IDENTIFIER HI_OPTION
  288             | IDENTIFIER . PLUS EQUALS IDENTIFIER
  289             | IDENTIFIER . PLUS EQUALS IDENTIFIER LO_OPTION
  290             | IDENTIFIER . PLUS EQUALS IDENTIFIER HI_OPTION
  291             | IDENTIFIER . PLUS EQUALS INT_OPERAND
  295 address_expression: IDENTIFIER .
  296                   | IDENTIFIER . LO_OPTION
  297                   | IDENTIFIER . HI_OPTION
  298                   | IDENTIFIER . PLUS INT_OPERAND

    LO_OPTION  shift, and go to state 332
    HI_OPTION  shift, and go to state 333
    PLUS       shift, and go to state 356

    $default  reduce using rule 295 (address_expression)


State 324

  292 literal_operand: INT_OPERAND .
  299 address_expression: INT_OPERAND .

    RIGHT_SQUARE_BRACKET  reduce using rule 292 (literal_operand)
    RIGHT_SQUARE_BRACKET  [reduce using rule 299 (address_expression)]
    $default              reduce using rule 292 (literal_operand)


State 325

  283 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET twin_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 357


State 326

  282 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET literal_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 358


State 327

  281 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET address_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 359


State 328

  260 operand: IDENTIFIER PLUS INT_OPERAND .

    $default  reduce using rule 260 (operand)


State 329

  265 operand: IDENTIFIER PIPE IDENTIFIER .
  266        | IDENTIFIER PIPE IDENTIFIER . LO_OPTION
  267        | IDENTIFIER PIPE IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 360
    HI_OPTION  shift, and go to state 361

    $default  reduce using rule 265 (operand)


State 330

  268 operand: IDENTIFIER BACKSLASH IDENTIFIER .
  269        | IDENTIFIER BACKSLASH IDENTIFIER . LO_OPTION
  270        | IDENTIFIER BACKSLASH IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 362
    HI_OPTION  shift, and go to state 363

    $default  reduce using rule 268 (operand)


State 331

  277 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA . $@16 vector_operand RIGHT_SQUARE_BRACKET

    $default  reduce using rule 276 ($@16)

    $@16  go to state 364


State 332

  296 address_expression: IDENTIFIER LO_OPTION .

    $default  reduce using rule 296 (address_expression)


State 333

  297 address_expression: IDENTIFIER HI_OPTION .

    $default  reduce using rule 297 (address_expression)


State 334

  298 address_expression: IDENTIFIER PLUS . INT_OPERAND

    INT_OPERAND  shift, and go to state 365


State 335

  280 memory_operand: LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 280 (memory_operand)


State 336

  262 operand: MINUS IDENTIFIER LO_OPTION .

    $default  reduce using rule 262 (operand)


State 337

  264 operand: MINUS IDENTIFIER HI_OPTION .

    $default  reduce using rule 264 (operand)


State 338

  295 address_expression: IDENTIFIER .
  296                   | IDENTIFIER . LO_OPTION
  297                   | IDENTIFIER . HI_OPTION
  298                   | IDENTIFIER . PLUS INT_OPERAND

    LO_OPTION  shift, and go to state 332
    HI_OPTION  shift, and go to state 333
    PLUS       shift, and go to state 334

    $default  reduce using rule 295 (address_expression)


State 339

  281 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  282               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  283               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 294


State 340

  271 vector_operand: LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  272               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  273               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 366


State 341

  275 vector_operand: LEFT_BRACE IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 275 (vector_operand)


State 342

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN . $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    $default  reduce using rule 135 ($@14)

    $@14  go to state 367


State 343

  137 instruction: opcode_spec operand COMMA LEFT_PAREN . operand_list RIGHT_PAREN
  138            | opcode_spec operand COMMA LEFT_PAREN . RIGHT_PAREN

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164
    RIGHT_PAREN          shift, and go to state 368

    operand_list     go to state 369
    operand          go to state 345
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 344

  250 operand_list: operand COMMA operand_list .

    $default  reduce using rule 250 (operand_list)


State 345

  249 operand_list: operand .
  250             | operand . COMMA operand_list

    COMMA  shift, and go to state 370

    $default  reduce using rule 249 (operand_list)


State 346

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 371


State 347

   42 ptr_spec: PTR_DIRECTIVE . ptr_space_spec ptr_align_spec
   43         | PTR_DIRECTIVE . ptr_align_spec

    ALIGN_DIRECTIVE   shift, and go to state 372
    CONST_DIRECTIVE   shift, and go to state 373
    GLOBAL_DIRECTIVE  shift, and go to state 374
    LOCAL_DIRECTIVE   shift, and go to state 375
    SHARED_DIRECTIVE  shift, and go to state 376

    ptr_space_spec  go to state 377
    ptr_align_spec  go to state 378


State 348

   38 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec . identifier_spec

    IDENTIFIER  shift, and go to state 84

    identifier_spec  go to state 379


State 349

   40 param_entry: REG_DIRECTIVE $@11 variable_spec identifier_spec .

    $default  reduce using rule 40 (param_entry)


State 350

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param .

    $default  reduce using rule 17 (function_decl)


State 351

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list . RIGHT_PAREN
   36 param_list: param_list . COMMA $@9 param_entry

    COMMA        shift, and go to state 380
    RIGHT_PAREN  shift, and go to state 381


State 352

   34 param_list: param_entry .

    $default  reduce using rule 34 (param_list)


State 353

  131 literal_list: literal_list COMMA literal_operand .

    $default  reduce using rule 131 (literal_list)


State 354

  248 wmma_spec: WMMA_DIRECTIVE LAYOUT LAYOUT . CONFIGURATION

    CONFIGURATION  shift, and go to state 382


State 355

  247 wmma_spec: WMMA_DIRECTIVE LAYOUT CONFIGURATION .

    $default  reduce using rule 247 (wmma_spec)


State 356

  285 twin_operand: IDENTIFIER PLUS . IDENTIFIER
  286             | IDENTIFIER PLUS . IDENTIFIER LO_OPTION
  287             | IDENTIFIER PLUS . IDENTIFIER HI_OPTION
  288             | IDENTIFIER PLUS . EQUALS IDENTIFIER
  289             | IDENTIFIER PLUS . EQUALS IDENTIFIER LO_OPTION
  290             | IDENTIFIER PLUS . EQUALS IDENTIFIER HI_OPTION
  291             | IDENTIFIER PLUS . EQUALS INT_OPERAND
  298 address_expression: IDENTIFIER PLUS . INT_OPERAND

    IDENTIFIER   shift, and go to state 383
    INT_OPERAND  shift, and go to state 365
    EQUALS       shift, and go to state 384


State 357

  283 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 283 (memory_operand)


State 358

  282 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 282 (memory_operand)


State 359

  281 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 281 (memory_operand)


State 360

  266 operand: IDENTIFIER PIPE IDENTIFIER LO_OPTION .

    $default  reduce using rule 266 (operand)


State 361

  267 operand: IDENTIFIER PIPE IDENTIFIER HI_OPTION .

    $default  reduce using rule 267 (operand)


State 362

  269 operand: IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION .

    $default  reduce using rule 269 (operand)


State 363

  270 operand: IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION .

    $default  reduce using rule 270 (operand)


State 364

  277 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 . vector_operand RIGHT_SQUARE_BRACKET

    LEFT_BRACE  shift, and go to state 164

    vector_operand  go to state 385


State 365

  298 address_expression: IDENTIFIER PLUS INT_OPERAND .

    $default  reduce using rule 298 (address_expression)


State 366

  271 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  272               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  273               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 386
    RIGHT_BRACE  shift, and go to state 387


State 367

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 . COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    COMMA  shift, and go to state 388


State 368

  138 instruction: opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 138 (instruction)


State 369

  137 instruction: opcode_spec operand COMMA LEFT_PAREN operand_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 389


State 370

  250 operand_list: operand COMMA . operand_list

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164

    operand_list     go to state 344
    operand          go to state 345
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 371

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND .

    $default  reduce using rule 10 (block_spec)


State 372

   48 ptr_align_spec: ALIGN_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 390


State 373

   47 ptr_space_spec: CONST_DIRECTIVE .

    $default  reduce using rule 47 (ptr_space_spec)


State 374

   44 ptr_space_spec: GLOBAL_DIRECTIVE .

    $default  reduce using rule 44 (ptr_space_spec)


State 375

   45 ptr_space_spec: LOCAL_DIRECTIVE .

    $default  reduce using rule 45 (ptr_space_spec)


State 376

   46 ptr_space_spec: SHARED_DIRECTIVE .

    $default  reduce using rule 46 (ptr_space_spec)


State 377

   42 ptr_spec: PTR_DIRECTIVE ptr_space_spec . ptr_align_spec

    ALIGN_DIRECTIVE  shift, and go to state 372

    ptr_align_spec  go to state 391


State 378

   43 ptr_spec: PTR_DIRECTIVE ptr_align_spec .

    $default  reduce using rule 43 (ptr_spec)


State 379

   38 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec .

    $default  reduce using rule 38 (param_entry)


State 380

   36 param_list: param_list COMMA . $@9 param_entry

    $default  reduce using rule 35 ($@9)

    $@9  go to state 392


State 381

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN .

    $default  reduce using rule 23 (function_ident_param)


State 382

  248 wmma_spec: WMMA_DIRECTIVE LAYOUT LAYOUT CONFIGURATION .

    $default  reduce using rule 248 (wmma_spec)


State 383

  285 twin_operand: IDENTIFIER PLUS IDENTIFIER .
  286             | IDENTIFIER PLUS IDENTIFIER . LO_OPTION
  287             | IDENTIFIER PLUS IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 393
    HI_OPTION  shift, and go to state 394

    $default  reduce using rule 285 (twin_operand)


State 384

  288 twin_operand: IDENTIFIER PLUS EQUALS . IDENTIFIER
  289             | IDENTIFIER PLUS EQUALS . IDENTIFIER LO_OPTION
  290             | IDENTIFIER PLUS EQUALS . IDENTIFIER HI_OPTION
  291             | IDENTIFIER PLUS EQUALS . INT_OPERAND

    IDENTIFIER   shift, and go to state 395
    INT_OPERAND  shift, and go to state 396


State 385

  277 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 397


State 386

  272 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  273               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 398


State 387

  271 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 271 (vector_operand)


State 388

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA . operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164

    operand          go to state 399
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 389

  137 instruction: opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN .

    $default  reduce using rule 137 (instruction)


State 390

   48 ptr_align_spec: ALIGN_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 48 (ptr_align_spec)


State 391

   42 ptr_spec: PTR_DIRECTIVE ptr_space_spec ptr_align_spec .

    $default  reduce using rule 42 (ptr_spec)


State 392

   36 param_list: param_list COMMA $@9 . param_entry

    PARAM_DIRECTIVE  shift, and go to state 132
    REG_DIRECTIVE    shift, and go to state 133

    param_entry  go to state 400


State 393

  286 twin_operand: IDENTIFIER PLUS IDENTIFIER LO_OPTION .

    $default  reduce using rule 286 (twin_operand)


State 394

  287 twin_operand: IDENTIFIER PLUS IDENTIFIER HI_OPTION .

    $default  reduce using rule 287 (twin_operand)


State 395

  288 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER .
  289             | IDENTIFIER PLUS EQUALS IDENTIFIER . LO_OPTION
  290             | IDENTIFIER PLUS EQUALS IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 401
    HI_OPTION  shift, and go to state 402

    $default  reduce using rule 288 (twin_operand)


State 396

  291 twin_operand: IDENTIFIER PLUS EQUALS INT_OPERAND .

    $default  reduce using rule 291 (twin_operand)


State 397

  277 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@16 vector_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 277 (tex_operand)


State 398

  272 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  273               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 403
    RIGHT_BRACE  shift, and go to state 404


State 399

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand . COMMA LEFT_PAREN operand_list RIGHT_PAREN

    COMMA  shift, and go to state 405


State 400

   36 param_list: param_list COMMA $@9 param_entry .

    $default  reduce using rule 36 (param_list)


State 401

  289 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION .

    $default  reduce using rule 289 (twin_operand)


State 402

  290 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION .

    $default  reduce using rule 290 (twin_operand)


State 403

  273 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 406


State 404

  272 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 272 (vector_operand)


State 405

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA . LEFT_PAREN operand_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 407


State 406

  273 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  274               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 408
    RIGHT_BRACE  shift, and go to state 409


State 407

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN . operand_list RIGHT_PAREN

    IDENTIFIER           shift, and go to state 159
    INT_OPERAND          shift, and go to state 140
    FLOAT_OPERAND        shift, and go to state 141
    DOUBLE_OPERAND       shift, and go to state 142
    LEFT_SQUARE_BRACKET  shift, and go to state 160
    SPECIAL_REGISTER     shift, and go to state 161
    MINUS                shift, and go to state 162
    EXCLAMATION          shift, and go to state 163
    LEFT_BRACE           shift, and go to state 164

    operand_list     go to state 410
    operand          go to state 345
    vector_operand   go to state 168
    tex_operand      go to state 169
    builtin_operand  go to state 170
    memory_operand   go to state 171
    literal_operand  go to state 172


State 408

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 411


State 409

  273 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 273 (vector_operand)


State 410

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 412


State 411

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA  shift, and go to state 413


State 412

  136 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@14 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN .

    $default  reduce using rule 136 (instruction)


State 413

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 414


State 414

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA  shift, and go to state 415


State 415

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 416


State 416

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE

    COMMA  shift, and go to state 417


State 417

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 418


State 418

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 419


State 419

  274 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 274 (vector_operand)
